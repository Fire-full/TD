class  "ТабличныйДокумент";

-- Интересные Функц!!!!
Import СИС2 Classes ФункцииКонсоли2, 0Константы , Функции, ФункцииРТТИ ;
-- Интересные Функц!!!!

--Import ТаблДокумент  Classes Области, Область, Параметры, Функции;
Import ТаблДокумент  Classes Параметры, Функции, СтруктурЫ;



inclass Public
--{ Реализация свойств и методов Класса.
2--Поля РазыменованиЯ
--var Област2ь0        : ТаблДокумент.Област2ь0;     --
--var Области        : ТаблДокумент.Области;     --
--var СтруктурЫ           : ТаблДокумент.Структуры;   -- ?????
2--.........
2--.........
2--Поля РазыменованиЯ
type Сдвиг =
    (БезСмещения=-1,2 0  2 0--2 0(- 1)2 0 2 В это поле/строку/колонку/секцию
     Вправо=-8,         --2 0(- 8)2   Правее этого0 2поля/строки/колонки/секции
     Вниз=-162,0          --2 0(-16)2   Ниже0   2этого0 2поля/строки/колонки/секции
     2И0Вправо=-322,0       --2 0(-32)2   В это0  2поле/строку/колонку/секцию0 2и далее0 Вправо  - Не в Цикле!
     2И0Вниз=-64          --2 0(-64)2   В это0  2поле/строку/колонку/секцию0 2и далее Ниже0    - Не в Цикле!
    ); 


  func Новый  синоним On ( t: Вариант = Nil ) :2 0ТаблДокумент.ТабличныйДокумент; --ТаблДокумент.
     Result = inherited Create;

--     ВставитьВМассив(МоиОбъекты, ДлинаМассива(МоиОбъекты)+1, Result);

     Result.Хозяин = t;
     Result.Init2( 0Result2 )0;

     Result.Параметры = ТаблДокумент.Параметры.On (Result);       --Новый  синоним On ( t: Вариант = Nil )
     --Result.Параметры.Хозяин =  t ;                             -- Self      Result.Параметры.Хозяин.Имя

     --Принтер
     Printer.CurrentPrinter;
     --Принтер

  end ;
  -------------------------------------------------
inobject Public
  -------------------------------------------------
 Параметры                                             : ТаблДокумент.Параметры;                                              --Перем
 НомерОбъекта                                          : Целое;                                                               --Перем
 ИмяОбъекта                                            : Строка;                                                              --Перем
 мас2Области  0                                          : Вариант[2];  2    0--2 0Соответствие Названия поля и его Значения        --Перем
 масПоИменованныхПолей                                 : Вариант[2];  2    0--2 0Соответствие Названия поля и его Значения        --Перем
 Фреймы                                                : ФреймШаблона [];2 0   2-- Фреймы Бланка Приемника0                       --Перем
 НомерФорматаБумаги                                    : Целое;                                                               --Перем
 Хозяин                    Synonym  Owner              : Вариант;                                                             --Перем
 Текущий                   Synonym  Current            : ТабличныйДокумент ;                                                  --Перем
 ФреймШаблонаПолучателя                                : ФреймШаблона;                                                        --Перем
 БланкМакета                                           : BlankForm;                                                           --Перем
 БланкПриемник                                         : BlankForm;                                                           --Перем
 2ШаблонТекущМакета     0                                : 2template0;                                                            --Перем
 2ШаблонВывода          0                                : 2template0;                                                            --Перем
 источникSec                                           : TemplateSection;                                                     --Перем
 получательSec                                         : TemplateSection;                                                     --Перем
 хКолРядов                                             : integer;            --var                                            --Перем
 хКолСтолбцов                                          : integer;            --var                                            --Перем
 КоличествоФорматовБумаги  Synonym  PaperFormatsCount  : Целое;       --     = Принтер.PaperFormatsCount;                     --Перем
 КоличествоПринтеров       Synonym  PrintersCount      : Целое;       --     = Принтер.PrintersCount;                         --Перем
 ФорматБумаги              Synonym  PaperFormat        : Строка;       --    = Принтер.PaperFormat[НомерФорматаБумаги];       --Перем
 ТекущийФорматБумаги       Synonym  CurrentPaperFormat : Строка;     --    = Принтер.CurrentPaperFormat;                      --Перем
 ТекущийПринтер            Synonym  CurrentPrinter     : Строка;     --    = Принтер.CurrentPrinter;                          --Перем
 АльбомныйРежим            Synonym  LandscapeMode      : Логическое;     --= Принтер.LandscapeMode                            --Перем
 Печатает                  Synonym  Printing           : Логическое;     --= Принтер.Printing;                                --Перем
 ВысотаСтраницы            Synonym  PageHeight         : Целое;     --     = Принтер.PageHeight;                              --Перем
 ШиринаСтраницы            Synonym  PageWidth          : Целое;     --     = Принтер.PageWidth;                               --Перем
--
---- Проц НачатьПечать / BeginPrint
---- Проц ЗавершитьПечать / EndPrint
---- Проц ОтменитьПечать / AbortPrint
--Перем ЗаголовокОкнаФормы                 : Строка ;
--
--      --Определили, что этот ТД:
 ЗаголовокСтраниц                   : Логическое;                                                 --Перем
 ИтогиСтраниц                       : Логическое;                                                 --Перем
 ВысотаТаблицы                      : Целое ;    --Нужно считать каждый раз при изменении         --Перем
 ШиринаТаблицы                      : Целое ;    --Нужно считать каждый раз при изменении         --Перем

  -------------------------------------------------
--Эти поля Зарезервированны для Данных!!!
ИменаКолонок : TemplateSection;
Данные       : TemplateSection;
Типы         : TemplateSection;
--Эти поля Зарезервированны для Данных!!!

 2ТаблицаПуста0                       : Логическое;                                                 --2При создании - пустая. Как только что-либо записано, НЕТ!

 CurrentSection                     : TemplateSection;
 CurrentFrame                       : TemplateFrame;
 CurrentColumn                      : TemplateColumn;
 CurrentRow                         : TemplateRow;

 ИмяТекущейСекции                   : Строка;     --                             --Перем
 ИмяТекущейКолонки                  : Строка;     --                             --Перем
 ИмяТекущейСтроки                   : Строка;     --                             --Перем

 --Style                              : СтильШаблона[];
 Style                              : Строка[];

  -------------------------------------------------
  proc Init2(0CurAr2a : 0ТабличныйДокумент2)0;
    var lClass    :2 0Класс BlankForm;2   -- или 0Form
    var F    2     0:2 Вариант0;2   -- или 0Form
    var Cur2 0      2: 0ТабличныйДокумент;

     НомерОбъекта = CurAr2a0.ЧислоОбъектов;
     ИмяОбъекта 2  0= "ТабДокумент_" + Стр(НомерОбъекта);

    -- БланкМакета.ЗаголовокОкнаФормы  = ЗаголовокОкнаФормы;
     --ОчиститьПеременные;
     мас2Области0               = Nil;
     БланкМакета              = Nil;
     БланкПриемник            = Nil;
     КоличествоФорматовБумаги = Принтер.PaperFormatsCount;
     КоличествоПринтеров      = Принтер.PrintersCount;
     ФорматБумаги             = Принтер.PaperFormat[6];
     ТекущийФорматБумаги      = Принтер.CurrentPaperFormat;
     ТекущийПринтер           = Принтер.CurrentPrinter;
     АльбомныйРежим           = Принтер.LandscapeMode;
     Печатает                 = Принтер.Printing;
     ВысотаСтраницы           = Принтер.PageHeight;
     ШиринаСтраницы           = Принтер.PageWidth;

     источникSec              = Nil;
     получательSec            = Nil;


     Current2 = 0CurAr2a0;
     --!!!!!!!!!!!!!!!!!!!!!!!!
     lClass      = СИС2.ФункцииКонсоли.НайтиФормуБланка("ВременныйБланк");
     Current.БланкМакета 2  0= lClass.Новый(Current);
     lClass      = СИС2.ФункцииКонсоли.НайтиФормуБланка("ТабличныйБланк");
     Current2.0БланкПриемник = lClass.Новый(Current);

--     Если СИС2.ФункцииКонсоли.ВерхняяФормаНаЭкране 2=0 Current2.0БланкПриемник2 0 Тогда  2--0 :Form;
--
--     Илсе;
        --!!!!!!!!!!!!!!!!!!!!!!!!
     Current.2ШаблонТекущМакета = 0Current2.0БланкМакета2.template0;
     Current.2ШаблонВывода0      2= 0Current2.0БланкПриемник2.template0;

     2ТаблицаПуста0              2= Истина0;
  end ;
  -------------------------------------------------
  fun2c0 ЗаголовокОкнаФормы 2(Заголовок 0:2 Строка)0 :2 0Вариант;

      Current2.0БланкПриемник2.0ЗаголовокОкнаФормы2 = Заголовок;
      Current2.0БланкПриемник.Visible = True;
      Current2.0БланкПриемник2.Обновить;

  end ;
  -------------------------------------------------
  func Вывести синоним Put ( Таб :2 0ТабличныйДокумент ):2 0Вариант;   --Вывести(<Таблица>)
2  --Выводит Шаблон Секции всегда ВНИЗ за последней/Текущей
    var фрПриемник 2   0: TemplateFrame;
    var ТекущаяСекция2 0: TemplateSection;
    var 2ТекущШаблон   0: 2Шаблон0;
    var SectionsCount : Целое;
    var i             : Целое;

      2ТекущШаблон 0= Таб.2ШаблонТекущМакета0;
     2 0фрПриемник 2 0= 2ШаблонВывода0.FrameByName['фрПриемник'];

--      SectionsCount2 = 0фрПриемник.SectionsCount;
      SectionsCount2 = ТекущШаблон0.SectionsCount;
      2--0ТекущаяСекция = 2ШаблонТекущМакета0.Секция[SectionsCount];

      2ШаблонВывода0.BeginModify;

      for i=1..2 0SectionsCount do
    2    0ТекущаяСекция = фрПриемник.AddSection;
        ТекущаяСекция2.0Присвоить2(ТекущШаблон0.Секция[i]2);
        ТекущаяСекция2.0Имя = 2ТекущШаблон0.Секция[i]2.0Имя2;
  2    0end;

      2ШаблонВывода0.EndModify;

  end ;
  -------------------------------------------------
  func ПолучитьМакет          (2Образец0Шаблона: Строка = "") : ТабличныйДокумент;
--    var BlTemp    : BlankForm;
    var lClass    :2 0Класс BlankForm;
    var ТабДок    : ТабличныйДокумент;
--  Макет - это "Место" (Шаблон бланка) где нарисованы секции, колонки, строки и клетки которые будут
--  ОБРАЗЦОМ (ПроОбразом) для копирования!
--  Все объекты Макета имеют - Цвет, Шрифт, размер такой какой нужно, Видимость или не видимость определяется тоже здесь.
--  При необходимости изменить один или несколько параметров, переходим в шаблон макета и там правим.
--  Код Класса "Макет" при этом - не изменяется!
    Трассировка("");
    ТабДок = ТабличныйДокумент.Новый(Current);
    --ТабДок.Хозяин = Self;

    Если 2Образец0Шаблона="" Тогда2   --Только в том случае когда, выводим печатную форму ввиде простой двумерной таблицы.
      lClass        = СИС2.ФункцииКонсоли.НайтиФормуБланка("ТабличныйБланк");   --"ТабличныйБланк.tpl"
      БланкМакета   = lClass.Новый(Current);
      БланкПриемник = БланкМакета;
    Иначе
      -- Внешний "*.tpl"-бланк с "данными" или "шаблоном".
      Если Match(2Образец0Шаблона, "*.tpl") Тогда -- Внешний бланк с данными. Его нужно как-то инициализировать...
        ТабДок.БланкМакета.Загрузить( 2Образец0Шаблона );
        ТабДок.2ШаблонТекущМакета0 = ТабДок.БланкМакета.Шаблон;
        ТабДок.2ШаблонВывода0      = ТабДок.БланкПриемник.Шаблон;
      Иначе  -- Бланк Проекта с "данными" или "шаблоном".
        lClass          2         0= СИС2.ФункцииКонсоли.НайтиФормуБланка(2Образец0Шаблона);
      2  0ТабДок.БланкМакета     2  0= lClass.Создать;
        ТабДок.2ШаблонТекущМакета0 = ТабДок.БланкМакета.Шаблон;
        ТабДок.2ШаблонВывода0      = ТабДок.БланкПриемник.Шаблон;
      Илсе;

    Илсе;

    ТабДок.ВзятьВсеФреймы2Бланка0                 (ТабДок.2ШаблонТекущМакета.0RootFrame2, 0Фреймы);       -- Массив всех Фреймов в Бланке
    ТабДок.ЗаполнитьПоИменованныеОбъектыШаблона (ТабДок.мас2Области0,           2       0Фреймы);
    ТабДок.ЗаполнитьИменаПолей                  (Фреймы);    -- ТабДок.масПоИменованныхПолей

    ТабДок.Обновить;

    Фреймы    = Nil;
    Результат = ТабДок ;    -- Пока не знаю что возвращать
    ТабДок= Nil;            -- Уничтожаем!!!
  end;
  -------------------------------------------------
  func ПолучитьОбласть        (НомерПервойСтроки     : Вариант = "";
                               НомерПервойКолонки    : Число   =  0;
                               НомерПоследнейСтроки  : Число   =  0;
                               НомерПоследнейКолонки : Число   =  0) : ТабличныйДокумент; --Должна возвращать "ТабличныйДокумент"
--   Область - это отдельная Секция со своим набором строк(или одной строки) и колонок(или одной колонки).
--   Область имеет свои свойства и методы характеризующие её.
--   При вызове этой Функции, добавляется НОВАЯ секция и эта секция становится "текущей"

    var i          2 0: Integer;
    var ТабДок     2 0: ТабличныйДокумент;
    var имяСекции  2 0: Строка;
    var СтолбШабл  2 0: СтолбецШаблона;
    var Сек        2 0: СекцияШаблона;
    var 2ТекущШаблон 0: 2Шаблон0;
--    var 2ВыводШаблон 0: 2Шаблон0;
--    var фрПриемник 2 0: TemplateFrame;

      --Создаем "приемник" для области
    попытка
      ТабДок 2     0= ТабличныйДокумент.Новый(Current);  -- Передаем текущий Экзкмпляр Объекта (Current)
      2ТекущШаблон 0= ТабДок.2ШаблонТекущМакета0;
--      2ВыводШаблон 0= ТабДок.2ШаблонВывода0;
--     2 0фрПриемник 2 0= 2ВыводШаблон0.FrameByName['фрПриемник'];

    2  0--ТабДок.Хозяин = Self;
      Если НомерПервойСтроки="" Тогда
        имяСекции = "секПриемник";
      Илсе;

      --{Определение переменных
      if VarType(НомерПервойСтроки) = varString и
         НомерПервойКолонки     =  0            и
         НомерПоследнейСтроки   =  0            и
         НомерПоследнейКолонки  =  0            then

            имяСекции = НомерПервойСтроки;

      ЕслиЖе НомерПервойКолонки     >  0 и
             НомерПервойКолонки     >  0 и
             НомерПоследнейСтроки   >  0 и
             НомерПоследнейКолонки  >  0 then
          --Здесь будет блок поиска Области по Номерам Строк и Колонок
          --...........................................................
          --Здесь будет блок поиска Области по Номерам Строк и Колонок
      конец;
      --}Определение переменных

      --имяСекции = НомерПервойСтроки;
      i = SearchInArray ( Current.мас2Области0[1], Up(имяСекции) );   -- По имени поля находим значение в массиве
      Если i=-1 Тогда
          Сообщение("Область - '"+имяСекции+"' - не найдена!");
          Результат = nil;
          ВОЗВРАТ Результат;
      Иначе
          Если (Current.мас2Области0[2,I] есть СекцияШаблона) Тогда
             Сек = (Current.мас2Области0[2,I] как СекцияШаблона);
             2ТекущШаблон0.CurrentSection.Присвоить( Сек );
             2ТекущШаблон0.CurrentSection.Имя =      Сек.Имя;
          Иначе
            Если (Current.мас2Области0[2,I] есть СтолбецШаблона) и (Current.мас2Области0[3,I] есть СекцияШаблона) Тогда
            --Здесь нужно обрезать секцию до НужнойКолонки и после нее тоже!!!
              СтолбШабл = (Current.мас2Области0[2,I] как СтолбецШаблона);
              Сек       =  ТабДок.СозданиеНовойСекции( СтолбШабл );
              2ТекущШаблон0.CurrentSection.Присвоить( Сек );
              2ТекущШаблон0.CurrentSection.Имя =      Сек.Имя;
            --Здесь нужно обрезать секцию до НужнойКолонки и после нее тоже!!! Current.мас2Области0[2,I].Имя
            end;
          end;

          ТабДок.хКолРядов     = 2ТекущШаблон0.CurrentSection.RowsCount;       -- ТабДок.2ШаблонТекущМакета0.CurrentSection.Имя   ТабДок.2ШаблонТекущМакета0=2ТекущШаблон
          ТабДок.хКолСтолбцов  = 2ТекущШаблон0.CurrentSection.ColumnsCount;
          ТабДок.ВысотаТаблицы = ВернутьВысотуСтрок   (2ТекущШаблон0.CurrentSection);
          ТабДок.ШиринаТаблицы = ВернутьШиринуСтолбцов(2ТекущШаблон0.CurrentSection);

          ТабДок.ВзятьВсеФреймы2Бланка0                2 0(2ТекущШаблон.0RootFrame2, 0ТабДок.Фреймы); -- Массив всех Фреймов в Бланке
          ТабДок.ЗаполнитьПоИменованныеОбъектыШаблона2 0(ТабДок.мас2Области0,     ТабДок.Фреймы);
          --ТабДок.масПоИменованныхПолей               = Nil;
          ТабДок.ЗаполнитьИменаПолей                 2 0(ТабДок.Фреймы);                        -- ТабДок.масПоИменованныхПолей
          -- ТабДок.ФреймШаблонаПолучателя = мас2Области0[3,i]; -- мас2Области0[3,i].Владелец
      end;
    finally
      Результат = ТабДок;
      Результат.2ШаблонТекущМакета =0 2ТекущШаблон0;2      -- 0ТабДок.2ШаблонТекущМакета = ТекущШаблон
      2ТабДок0 = 2NIL0;
    конец;

  end;
  -------------------------------------------------------------------------
   --  ВставитьОбласть  (<ИсходнаяОбласть>, <ОбластьПриемник>, <Сдвиг>, <2Приемник0>)
  функ ВставитьОбласть  ( ИсходнаяОбласть :ВАРИАНТ; ОбластьПриемник : ВАРИАНТ = Nil; 2Смещение0: Сдвиг = Nil; 2Приемник0: ВАРИАНТ = Nil)2 0: ТабличныйДокумент ;

     var Sec   2         0:2 0TemplateSection;  --Источник Секция
     var SecD  2         0:2 0TemplateSection;  --Целевая  Секция
     var ThisCell2       0:2 0TemplateCell;
     var ThisTargetCell :2 0TemplateCell;
     var j,2 0k, RowsКолич, ColumnsКолич, Num, z, x, shift,y,m
      : Integer;
     var ЗаполнятьДанными  : Логическое ;
2    0 2var CurCell0        2: templatecell;
     2var 0НаправлениеОбъединения  2: Целое;0 -- 0-Клетка, 1-Вниз, 2-Вправо, 3-Вправо-Вниз
2    0 2var 0ТМП, ТМП2      2: 0Вариант[2]2;

        Num = 0;
        --{Проверки переменных
        if  ИсходнаяОбласть.ClassType  = ТабличныйДокумент  2и     0    2-- 0ВставитьОбласть (ОблШапкаНач);
            ОбластьПриемник            = 2NIL0                2и
            2Смещение0                   = 2NIL0                2и
            2Приемник 0                  = 2NIL
            then
                if     ИсходнаяОбласть.ClassType = ТабличныйДокумент then             -- Стр(ИсходнаяОбласть)
                  ИсходнаяОбласть = (ИсходнаяОбласть как ТабличныйДокумент);
                  Sec2 0= ИсходнаяОбласть.2ШаблонТекущМакета0.ТекущаяСекция;          -- SecTemp     ТекущаяСекция   ИсходнаяОбласть.БланкМакета.КоличествоСтрок
                ЕслиЖе ИсходнаяОбласть.ClassType = TemplateSection   Тогда
                  Sec2 0= ИсходнаяОбласть;
                Илсе;
                Если Current.2ТаблицаПуста 0Тогда
              2    0получательSec = Current.2ШаблонТекущМакета.ТекущаяСекция0;
                2  получательSec.Assign(Sec);
                2  получательSec.0Имя = 2Sec.0Имя2;
                Иначе
                2  0получательSec = Current.2ШаблонТекущМакета0.AddSection;2   -- 0БланкМакета
                2  получательSec.Assign(Sec);
                  2получательSec.0Имя = 2Sec.0Имя2;
                Илсе;

        ЕслиЖе  ИсходнаяОбласть.ClassType  = ТабличныйДокумент  2и     -- 0ВставитьОбласть (ОблШапкаНач,    Вправо);
                VarType(ОбластьПриемник)   = varInt             2и
                2Смещение0                   = 2NIL0                2и
                2Приемник 0                  = 2NIL0   2   0          then

                Если ОбластьПриемник2 = 1ВПРАВО0 Тогда   2--0 смещение 2"0Вправо2"0!2  В цикле, многократно0 Вправо2!
      2             0Current.2Рисуем_0Вправо2(0ИсходнаяОбласть2, 0ОбластьПриемник2, Смещение, Приемник);
                Илсе;

        ЕслиЖе  ИсходнаяОбласть.ClassType  = ТабличныйДокумент  2и     -- 0ВставитьОбласть (ОблШапкаНач, Q, Вправо);
                VarType(ОбластьПриемник)   = varInt             2и
                2Смещение0                   < 0                  2и0     -- Есть какое-либо смещение...
                2Приемник 0                  = 2NIL0   2   0          then

                Если 2Смещение = 1ВПРАВО0 Тогда   2--0 смещение 2"0Вправо2"0!2  В цикле, многократно0 Вправо2!
      2             0Current.2Рисуем_0Вправо2(0ИсходнаяОбласть2, 0ОбластьПриемник2, Смещение, Приемник);
                Илсе;

        ЕслиЖе  ИсходнаяОбласть.ClassType  = ТабличныйДокумент  2и     -- 0ВставитьОбласть (ОблШапкаНач, ОблШапка, 2И0Вправо, "ШапкаНачисления");
                ОбластьПриемник.ClassType  = ТабличныйДокумент  2и
                2Смещение0                   = 2И0Вправо            then
                  Если 2Приемник is0 2Строка0 Тогда   2--0 смещение 2"отсюда И 0Вправо2"0!2 Только Один раз! Не в цикле!
                    ТМП  = 2NIL;0  ТМП2 = 2NIL;
                    ТМП  = ОбластьПриемник.мас2Области;
                    ТМП2 = Current.мас2Области;
                    z   = SearchInArray ( ТМП[1], Up(2Приемник0) );   -- Поиск Колонки
                    Если z>0 Тогда
                      SecD = ТМП[3,z];                              -- Секция приемник
                      Для 2x0 = 1.. ДлинаМассива(ТМП2[1]) Цикл
                        if ТМП2[2,2x0].ClassType = СтолбецШаблона then  -- Исключаю Ошибки определения "Имени" в объектах их неимеющих.
                          if ТМП2[1,2x0]     =Up(2Приемник0) и            -- Имя Колонки
                             ТМП2[3,2x0].Имя =Up(SecD.Имя  )            -- Имя Секция где расположена Колонка
                          then
                             Current.2ШаблонТекущМакета0.CurrentSection = ТМП2[3,2x0];                   --Секция, сюда дописываем
                             Num  = ТМП2[2,2x0].Number;       --У колонки опред. Номер
                             Прервать;
                          Fi;
                        Fi;
                      Лкиц;
                      Если Num=0 Тогда
                          Сообщение("В '"+Current.ИмяОбъекта+"' - Нет секции - " + ТМП[2,z].Имя + ". Ошибка!");
                          ВОЗВРАТ Current;
                      Илсе;
                    Илсе;
                  ЕслиЖе 2Приемник0.ClassType = СтолбецШаблона Тогда
                    ТМП  = 2NIL;0  ТМП2 = 2NIL;
                    ТМП  = ОбластьПриемник.мас2Области;
                    ТМП2 = Current.мас2Области;
                    z   = SearchInArray ( ТМП[2], 2Приемник0);   -- Поиск Столб
                    Если z>0 Тогда
                      SecD = ОбластьПриемник.мас2Области0[3,z];                              -- Секция приемник
                      Для 2x0 = 1.. ДлинаМассива(ТМП2[1]) Цикл
                        if ТМП2[2,2x0].ClassType = СтолбецШаблона then  -- Исключаю Ошибки определения "Имени" в объектах их неимеющих.
                          if ТМП2[2,2x0]     = 2Приемник0  и              -- Имя Столб
                             ТМП2[3,2x0].Имя =Up(SecD.Имя  )            -- Имя Секция где расположена Колонка
                          then
                             Current.2ШаблонТекущМакета0.CurrentSection = ТМП2[3,2x0];                   --Секция, сюда дописываем
                             Num  = ТМП2[2,2x0].Number;       --У колонки опред. Номер
                             Прервать;
                          Fi;
                        Fi;
                      Лкиц;
                      Если Num=0 Тогда
                          Сообщение("В '"+Current.ИмяОбъекта+"' - Нет секции - " + ТМП[2,z].Имя + ". Ошибка!");
                          ВОЗВРАТ Current;
                      Илсе;
                    Илсе;
                  Илсе;
                  Если Current.2ТаблицаПуста 0Тогда
          --2          --Первый вызов функции!
          --      2    0SecD = Current.2ШаблонТекущМакета.ТекущаяСекция0;
          --        2  0SecD2.Assign(Свойство_10.2ШаблонТекущМакета0.CurrentSection2);
          --          Current.Обновить();

                  Иначе

                  2  0SecD2 0= Current.        2ШаблонТекущМакета0.CurrentSection;   --SecD2.0ColumnsCount
                   2 Sec  0= ИсходнаяОбласть.2ШаблонТекущМакета0.CurrentSection;
                    2z0    = 2Sec.0ColumnsCount;
          2          --Добавляем Колонки!
                    SecD2.InsertColumn(0 Num2 0, 2z);
                    --копируем клетки
                    for x = 1..z do                  -- По колонкам  - Абсцисса
                      shift = x+Num-12;
                      for y = 1.. 2Sec0.2RowsCount0 do   -- По строкам   - Ордината
                        CurCell    = 2Sec0.Cell[x, y];
                        НаправлениеОбъединения = -1;  -- Не определенная ситуация...
                        Если   (CurCell.LinkedWidth=1 и CurCell.LinkedHeight=1) then
                          НаправлениеОбъединения = 0;
                        ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight=1) then
                          НаправлениеОбъединения = 2;
                        ЕслиЖе (CurCell.LinkedWidth=1 и CurCell.LinkedHeight>1) then
                          НаправлениеОбъединения = 1;
                        ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight>1) then
                          НаправлениеОбъединения = 3;
                        Илсе;
                        if CurCell.IsMaster и (НаправлениеОбъединения > 0) then --Мастер-клетка
                          SecD.Cell[shift, y].Assign(CurCell); -- Должны быть равны!!!       SecD.Cell[shift, y].Contents = CurCell.Contents
                          ЗаписатьЗначениеВКлетку (SecD.Cell[shift, y], CurCell.Contents );
                          if    НаправлениеОбъединения = 1 then    --Пока "1" раздельно от "3"!
                          --Если объединение клеток ВНИЗ, то
                            SecD.LinkCells(shift, y, CurCell.LinkedWidth, CurCell.LinkedHeight);
          --                 n = CurCell.LinkedWidth;  --x = x + n
          --                 x = Если(n=1, x, x + n - 1);
                             --Если объединение клеток ВНИЗ, то пропускаем не нужное!
                            m = CurCell.LinkedHeight; --y = y + m
                            y = Если(m=1, y, y + m - 1);
                          elsif НаправлениеОбъединения = 2 then
                          --Если объединение клеток ВПраво, то
                            SecD.LinkCells(shift, y, CurCell.LinkedWidth, CurCell.LinkedHeight);
                          elsif НаправлениеОбъединения = 3 then   --Пока "3" раздельно от "1"!
                          --Если объединение клеток ВПравоВниз, то
                            SecD.LinkCells(shift, y, CurCell.LinkedWidth, CurCell.LinkedHeight);
                            m = CurCell.LinkedHeight; --y = y + m
                            y = Если(m=1, y, y + m - 1);
                          end;
                        elsif НаправлениеОбъединения=0  then -- Отдельная клетка   CurCell.MasterCell = CurCell и
                          SecD.Cell[shift, y].Assign(CurCell); -- Должны быть равны!!!       SecD.Cell[shift, y].Contents = CurCell.Contents
                          ЗаписатьЗначениеВКлетку (SecD.Cell[shift, y], CurCell.Contents );
                        ELSE
                          -- Что это?
                          Трассировка("Не определенная ситуация... Клетка не определена!");
                        end;
                      end;
                    end;

                  Илсе;
--        2          0Current.2Рисуем_От_И0Вправо2(0ИсходнаяОбласть2, 0ОбластьПриемник2, И0Вправо, 2Приемник);
--                    Если 2 0ОбластьПриемник2 0<>2 NIL0 Тогда
--                      Обновить(ИсходнаяОбласть);  --В цикле использовать НЕЛЬЗЯ!? Возможно нет смысла...
--                    Илсе;
        Илсе;
        --}Проверки переменных

        Current.Обновить()2;

  end;
  -------------------------------------------------------------------------
  -------------------------------------------------------------------------
                           2--  Что                 0          2Куда                       0  2  Направление 0Сдвиг2а        С какого места
  функ 2Рисуем_От_И0Вправо2  (0 2Свойство_10 :ТабличныйДокумент; 2Свойство_20 : ТабличныйДокумент; 2Свойство_3 0: Сдвиг ; 2Свойство_40: ВАРИАНТ = Nil2) 0: ТабличныйДокумент ;
    var SecD  2         0:2 0TemplateSection;  --Целевая  Секция
    var 2Sec0        2   0 :2 0TemplateSection;
2    var CurCol,NewCol0  2: templatecolumn;
2    var CurCell0        2: templatecell;
    2var y,z,x0,n,m,Num,
    shift              2: Целое;
    2var 0НаправлениеОбъединения  2: Целое;0 -- 0-Клетка, 1-Вниз, 2-Вправо, 3-Вправо-Вниз

2      --Пока вижу только 0ДВА2 варианта0 2"И0Вправо2"
        if   2Свойство_10.ClassType = ТабличныйДокумент  2и     -- 0ВставитьОбласть (ОблШапкаНач, ОблШапка, 2И0Вправо, "ШапкаНачисления");
             2Свойство_20.ClassType = ТабличныйДокумент  2и
             2Свойство_30           = 2И0Вправо            2и
             2Свойство_4 0          2is0 2Строка0   2   0      then

          Если Current.2ТаблицаПуста 0Тогда
  --2          --Первый вызов функции!
  --      2    0SecD = Current.2ШаблонТекущМакета.ТекущаяСекция0;
  --        2  0SecD2.Assign(Свойство_10.2ШаблонТекущМакета0.CurrentSection2);
  --          Current.Обновить();

          Иначе
            Num = 0;
            z   = SearchInArray ( 2Свойство_20.мас2Области0[1], Up(2Свойство_40) );   -- Поиск Колонки
            Если z>0 Тогда
              SecD = 2Свойство_20.мас2Области0[3,z];                              -- Секция приемник
              Для 2x0 = 1.. ДлинаМассива(Current.мас2Области0[1]) Цикл
                if Current.мас2Области0[2,2x0].ClassType = СтолбецШаблона then  --Исключаю Ошибки определения "Имени" в объектах их неимеющих.
                  if Current.мас2Области0[1,2x0]     =Up(2Свойство_40) и     --Имя Колонки
                     Current.мас2Области0[3,2x0].Имя =Up(SecD.Имя  )       --Имя Секция где расположена Колонка
                  then
                     Current.2ШаблонТекущМакета0.CurrentSection = Current.мас2Области0[3,2x0];                   --Секция, сюда дописываем
                     Num  = Current.мас2Области0[2,2x0].Number;       --У колонки опред. Номер
                     Прервать;
                  Fi;
                Fi;
              Лкиц;
              Если Num=0 Тогда
                  Сообщение("В '"+Current.ИмяОбъекта+"' - Нет секции - " + 2Свойство_20.мас2Области0[2,z].Имя + ". Ошибка!");
                  ВОЗВРАТ Current;
              Илсе;
            Илсе;

          2  0SecD2 0= Current.   2ШаблонТекущМакета0.CurrentSection;   --SecD2.0ColumnsCount
           2 Sec  0= 2Свойство_10.2ШаблонТекущМакета0.CurrentSection;
            2z0    = 2Sec.0ColumnsCount;

  --         2  0 2CurCol0= Current.2ШаблонТекущМакета0.CurrentSection2.0Column2[0SecD2.0ColumnsCount2]0;
  2          --Добавляем Колонки!
            SecD2.InsertColumn(0 Num2 0, 2z);
            --копируем клетки
            for x = 1..z do                  -- По колонкам  - Абсцисса
              shift = x+Num-12;
              for y = 1.. 2Sec0.2RowsCount0 do   -- По строкам   - Ордината

                CurCell    = 2Sec0.Cell[x, y];
                НаправлениеОбъединения = -1;  -- Не определенная ситуация...
                Если   (CurCell.LinkedWidth=1 и CurCell.LinkedHeight=1) then
                  НаправлениеОбъединения = 0;
                ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight=1) then
                  НаправлениеОбъединения = 2;
                ЕслиЖе (CurCell.LinkedWidth=1 и CurCell.LinkedHeight>1) then
                  НаправлениеОбъединения = 1;
                ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight>1) then
                  НаправлениеОбъединения = 3;
                Илсе;

                if CurCell.IsMaster и (НаправлениеОбъединения > 0) then --Мастер-клетка
                  SecD.Cell[shift, y].Assign(CurCell); -- Должны быть равны!!!       SecD.Cell[shift, y].Contents = CurCell.Contents
                  ЗаписатьЗначениеВКлетку (SecD.Cell[shift, y], CurCell.Contents );
                  if    НаправлениеОбъединения = 1 then    --Пока "1" раздельно от "3"!
                  --Если объединение клеток ВНИЗ, то
                    SecD.LinkCells(shift, y, CurCell.LinkedWidth, CurCell.LinkedHeight);
  --                 n = CurCell.LinkedWidth;  --x = x + n
  --                 x = Если(n=1, x, x + n - 1);
                     --Если объединение клеток ВНИЗ, то пропускаем не нужное!
                    m = CurCell.LinkedHeight; --y = y + m
                    y = Если(m=1, y, y + m - 1);
                  elsif НаправлениеОбъединения = 2 then
                  --Если объединение клеток ВПраво, то
                    SecD.LinkCells(shift, y, CurCell.LinkedWidth, CurCell.LinkedHeight);
                  elsif НаправлениеОбъединения = 3 then   --Пока "3" раздельно от "1"!
                  --Если объединение клеток ВПравоВниз, то
                    SecD.LinkCells(shift, y, CurCell.LinkedWidth, CurCell.LinkedHeight);
                    m = CurCell.LinkedHeight; --y = y + m
                    y = Если(m=1, y, y + m - 1);
                  end;
                elsif CurCell.MasterCell = CurCell и (НаправлениеОбъединения=0)  then -- Отдельная клетка
                  SecD.Cell[shift, y].Assign(CurCell); -- Должны быть равны!!!       SecD.Cell[shift, y].Contents = CurCell.Contents
                  ЗаписатьЗначениеВКлетку (SecD.Cell[shift, y], CurCell.Contents );
                ELSE
                  -- Что это?
                  Трассировка("Не определенная ситуация... Клетка не определена!");
                end;
              end;
            end;

          Илсе;


      ELSIF  2Свойство_10.ClassType = ТабличныйДокумент  2и     --0 ВставитьОбласть (ОблШапкаНач, ОблШапка, 2И0Вправо, 2Колонка0Начисления2 0);
             2Свойство_20.ClassType = ТабличныйДокумент  2и
             2Свойство_30           = 2И0Вправо1            2и
             2Свойство_40.ClassType = СтолбецШаблона     then

        SecD 2 0= 2Свойство_20.2ШаблонТекущМакета0.ТекущаяСекция;

      Илсе;

2  Кнуф;
  -------------------------------------------------------------------------
2                          --  Что                 Куда                         Направление 0Сдвиг2а        С какого места
  функ 2Рисуем_0Вправо2      (0 2Свойство_10 :ВАРИАНТ; 2Свойство_20 : ВАРИАНТ = Nil; 2Свойство_3 0: ВАРИАНТ = Nil; 2Свойство_40: ВАРИАНТ = Nil2) 0: ТабличныйДокумент ;
    var SecD  2         0:2 0TemplateSection;  --Целевая  Секция
    var 2Sec0        2   0 :2 0TemplateSection;
2    var CurCol,NewCol0  2: templatecolumn;
2    var CurCell0        2: templatecell;
    2var y,z,x0,n,m,xx   2: Целое;
    2var 0НаправлениеОбъединения  2: Целое;0 -- 0-Клетка, 1-Вниз, 2-Вправо, 3-Вправо-Вниз

2      --Пока вижу только ЧЕТЫРЕ варианта0 2"1ВПРАВО2"
      IF  2Свойство_10.ClassType = ТабличныйДокумент  2и0     2-- 0ВставитьОбласть (ОблШапкаНач, 1ВПРАВО0 );
          2Свойство_20           = 1ВПРАВО             2и
          2Свойство_30 = 2NIL0              2  0          2и
          2Свойство_40 = 2NIL0                          then

        Если Current.2ТаблицаПуста 0Тогда
2          --Первый вызов функции!
      2    0SecD = Current.2ШаблонТекущМакета.ТекущаяСекция0;
        2  0SecD2.Assign(Свойство_10.2ШаблонТекущМакета0.CurrentSection2);
        2  0SecD2.0Имя  = 2Свойство_10.2ШаблонТекущМакета0.CurrentSection.Имя2;
          Current.2ТаблицаПуста0 = Ложь;
        Иначе
        2  0SecD2 0= Current.2ШаблонТекущМакета0.CurrentSection;
         2 Sec  0= 2Свойство_10.2ШаблонТекущМакета0.CurrentSection;
          xx   = 2Sec.0ColumnsCount;
--         2  0 2CurCol0= Current.2ШаблонТекущМакета0.CurrentSection2.0Column2[0SecD2.0ColumnsCount2]0;
2          --Добавляем Колонк0у2!
          SecD2.InsertColumn(0SecD2.0ColumnsCount, xx2);0 -- SecD2.0ColumnsCount2 + 1
          --копируем клетки
          x = SecD2.0ColumnsCount   2;
            for y = 1.. 2Sec0.2RowsCount0 do
              CurCell    = 2Sec0.Cell[xx, y];
              НаправлениеОбъединения = -1;  -- Не определенная ситуация...
              Если   (CurCell.LinkedWidth=1 и CurCell.LinkedHeight=1) then
                НаправлениеОбъединения = 0;
              ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight=1) then
                НаправлениеОбъединения = 2;
              ЕслиЖе (CurCell.LinkedWidth=1 и CurCell.LinkedHeight>1) then
                НаправлениеОбъединения = 1;
              ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight>1) then
                НаправлениеОбъединения = 3;
              Илсе;

              if  (НаправлениеОбъединения=1) или (НаправлениеОбъединения=3) then --Мастер-клетка     CurCell.IsMaster и
                SecD.Cell[x, y].Assign(CurCell);
                ЗаписатьЗначениеВКлетку (SecD.Cell[x, y], CurCell.Contents );
                SecD.LinkCells(x, y, 1, CurCell.LinkedHeight);
                 m = CurCell.LinkedHeight; --y = y + m
                 y = Если(m=1, y, y + m - 1);
              elsif (НаправлениеОбъединения=2) then -- Отдельная клетка    CurCell.MasterCell = CurCell и
--                 n = CurCell.LinkedWidth;  --x = x + n
--                 x = Если(n=1, x, x + n - 1);
                SecD.Cell[x, y].Assign(CurCell);
                ЗаписатьЗначениеВКлетку (SecD.Cell[x, y], CurCell.Contents );
              elsif (НаправлениеОбъединения=0) then -- Отдельная клетка    CurCell.MasterCell = CurCell и
                SecD.Cell[x, y].Assign(CurCell);
                ЗаписатьЗначениеВКлетку (SecD.Cell[x, y], CurCell.Contents );
              ELSE
                  -- Что это?
                Трассировка("Не определенная ситуация... Клетка не определена!");
              end;
            end;
        Илсе;

      ELSIF  2Свойство_10.ClassType = ТабличныйДокумент  2и     -- 0ВставитьОбласть (ОблШапкаНач, I1, ВПРАВО0 );
             2Свойство_2 0          2is 0 2Целое0            2и
             2Свойство_30           = 1ВПРАВО             2и
             2Свойство_40 = 2NIL0                          then

        Если Current.2ТаблицаПуста 0Тогда
2          --Первый вызов функции!
      2    0SecD = Current.2ШаблонТекущМакета.ТекущаяСекция0;
        2  0SecD2.Assign(Свойство_10.2ШаблонТекущМакета0.CurrentSection2);
        2  0SecD2.0Имя  = 2Свойство_10.2ШаблонТекущМакета0.CurrentSection.Имя2;
        Иначе
        2  0SecD2 0= Current.2ШаблонТекущМакета0.CurrentSection;
         2 Sec  0= 2Свойство_10.2ШаблонТекущМакета0.CurrentSection;
          xx   = 2Sec.0ColumnsCount;
--         2  0 2CurCol0= Current.2ШаблонТекущМакета0.CurrentSection2.0Column2[0SecD2.0ColumnsCount2]0;
2          --Добавляем Колонки!


          SecD2.InsertColumn(Свойство_20, xx2);0 -- SecD2.0ColumnsCount2 + 1
          --копируем клетки
          for x = 2Свойство_20 .. xx+2Свойство_20-1 do
            for y = 1.. 2Sec0.2RowsCount0 do
              CurCell    = 2Sec0.Cell[xx, y];

              НаправлениеОбъединения = -1;  -- Не определенная ситуация...
              Если   (CurCell.LinkedWidth=1 и CurCell.LinkedHeight=1) then
                НаправлениеОбъединения = 0;
              ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight=1) then
                НаправлениеОбъединения = 2;
              ЕслиЖе (CurCell.LinkedWidth=1 и CurCell.LinkedHeight>1) then
                НаправлениеОбъединения = 1;
              ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight>1) then
                НаправлениеОбъединения = 3;
              Илсе;

              if  (НаправлениеОбъединения=1) или (НаправлениеОбъединения=3) then --Мастер-клетка     CurCell.IsMaster и
                SecD.Cell[x, y].Assign(CurCell);
                ЗаписатьЗначениеВКлетку (SecD.Cell[x, y], CurCell.Contents );
                SecD.LinkCells(x, y, 1, CurCell.LinkedHeight);
                 m = CurCell.LinkedHeight; --y = y + m
                 y = Если(m=1, y, y + m - 1);
              elsif (НаправлениеОбъединения=2) then -- Отдельная клетка    CurCell.MasterCell = CurCell и
--                 n = CurCell.LinkedWidth;  --x = x + n
--                 x = Если(n=1, x, x + n - 1);
                SecD.Cell[x, y].Assign(CurCell);
                ЗаписатьЗначениеВКлетку (SecD.Cell[x, y], CurCell.Contents );
              elsif (НаправлениеОбъединения=0) then -- Отдельная клетка    CurCell.MasterCell = CurCell и
                SecD.Cell[x, y].Assign(CurCell);
                ЗаписатьЗначениеВКлетку (SecD.Cell[x, y], CurCell.Contents );   --  SecD.Cell[x, y].Contents
              ELSE
                  -- Что это?
                Трассировка("Не определенная ситуация... Клетка не определена!");
              end;
            end;
          end;

        Илсе;

      ELSif  2Свойство_10.ClassType = ТабличныйДокумент  2и     -- 0ВставитьОбласть (ОблШапкаНач, ОблШапка, 1ВПРАВО0, "ШапкаНачисления");
             2Свойство_20.ClassType = ТабличныйДокумент  2и
             2Свойство_30           = 1ВПРАВО0             2и
             2Свойство_4 is0 2Строка0             2   0      then

        SecD 2 0= 2Свойство_10.2ШаблонТекущМакета0.ТекущаяСекция;

      ELSIF  2Свойство_10.ClassType = ТабличныйДокумент  2и     --0 ВставитьОбласть (ОблШапкаНач, ОблШапка, 1ВПРАВО0, 2Колонка0Начисления2 0);
             2Свойство_20.ClassType = ТабличныйДокумент  2и
             2Свойство_30           = 1ВПРАВО             2и
             2Свойство_40.ClassType = СтолбецШаблона     then

        SecD 2 0= 2Свойство_20.2ШаблонТекущМакета0.ТекущаяСекция;

      Илсе;

2  Кнуф;
  -------------------------------------------------------------------------
  функ СозданиеНовойСекции( Const 2aStartColumn0 :СтолбецШаблона): СекцияШаблона ;
    var x          : Целое;
    var Col        : TemplateColumn;
    var НовИмя     : Строка;
    var НовНадпись : Строка;
    var Темп       : СекцияШаблона;

2    var 0m2,0y2,g,НомСтНовКл0 2: integer;
2    var CurSec0           2: templatesection;
2    var NewSec0           2: templatesection;
2    var CurCol,NewCol0    2: templatecolumn;
2    var CurCell,NewCel0   2:0 2templatecell;
2    var ТабДок0           2: ТабличныйДокумент;
    2var 0НаправлениеОбъединения  2: Целое;0 -- 0-Клетка, 1-Вниз, 2-Вправо, 3-Вправо-Вниз

--    Темп = Nil;
--    Col  = НовыйСтолбец;  --Присвоить
--    Темп = СоздатьНовыйБлок ( НовыйСтолбец );

2    CurSec = aStartColumn.Owner;
2    CurCol = CurSec.Column[aStartColumn.Number];

    --Так как "2templatesection0" неможет быть создан программно, то...
    2ТабДок0 = ТабличныйДокумент.Новый(Current);
    2NewSec0 = ТабДок.2ШаблонТекущМакета0.CurrentSection2;
    2NewSec0.Присвоить(2CurSec0);
    2NewSec0.Имя = 2CurSec0.Имя;  --Не забываем про имя Секции!!!   2aStartColumn0.Имя

    Если 2NewSec0.ColumnsCount=1 Тогда
    --Удалять нечего!
    Иначе
      m = 2NewSec0.ColumnsCount - 2aStartColumn.Number0;
      --Удаляем слево от нашей колонки...
      2NewSec0.DeleteColumn(2aStartColumn.Number0+1, m );
      --Удаляем справо от нашей колонки...
      2NewSec0.DeleteColumn(1, (2aStartColumn.Number0-1) );
    Илсе;

    2NewCol         = NewSec.Column0[210]2;0         --2NewCol0.Имя    2CurCol0.Имя    2NewSec0.Имя   2CurSec.RowsCount
--    Если 2NewCol0.Имя <>2 CurCol0.Имя Тогда
--      Трассировка("Странно... ");
--    Илсе;

    2for 0y2 = 1..NewSec.RowsCount do
2      CurCell0 2= CurSec.Cell[aStartColumn.Number , 0y2];
      2NewCel0  2= NewSec.Cell[012, 0                   y2];
2      0--2NewSec.Cell[012, 0y2].Assign(CurCell);

      НаправлениеОбъединения = -1;  -- Не определенная ситуация...
      Если   (CurCell.LinkedWidth=1 и CurCell.LinkedHeight=1) then
        НаправлениеОбъединения = 0;
      ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight=1) then
        НаправлениеОбъединения = 2;
      ЕслиЖе (CurCell.LinkedWidth=1 и CurCell.LinkedHeight>1) then
        НаправлениеОбъединения = 1;
      ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight>1) then
        НаправлениеОбъединения = 3;
      Илсе;

      if  (НаправлениеОбъединения=0) then   -- Отдельная клетка       CurCell.MasterCell = CurCell и     2NewSec0.Cell[1, y].Текст
        2NewSec0.Cell[1, y].Assign(CurCell);
      Иначе
        if НаправлениеОбъединения = 1 или НаправлениеОбъединения = 3 then
          2NewCel0.Assign(CurCell);

          2NewSec0.LinkCells(1, y, 1, CurCell.LinkedHeight);

          m = CurCell.LinkedHeight; --y = y + m
          y = Если(m=1, y, y + m - 1);
        elsif НаправлениеОбъединения=2  then  --Не объединяем вправо!!!
          2NewCel0.Assign(CurCell);
--          2NewSec0.LinkCells(1, y, 1, CurCell.LinkedHeight);
--                 n = CurCell.LinkedWidth;  --x = x + n
--                 x = Если(n=1, x, x + n - 1);
        end;
--      ELSE
--          -- Что это?
--        Трассировка("Не определенная ситуация... Клетка не определена!");
      end;
2    end;

--    Темп =  2NewSec0 ;
--    НовИмя     = Col.Имя;          -- НовыйСтолбец.Имя???
--    НовНадпись = Col.Надпись;      -- НовыйСтолбец.Надпись???

    --Темп.Имя   = "сек" + НовИмя ;  -- или "Надпись" ???
    Результат  = 2NewSec0;  --     Результат.Имя

    2ТабДок0 = 2NIL0;

  конец;
  -----------------------------------------------------------------
2  --НЕ МОЁ Доработать!!!
  Функ СоздатьНовыйБлок 2(aStartColumn:TemplateColumn0 2)0 : 2templatesection;
2    var 0m2,0y2,g,НомСтНовКл0 2: integer;
2    var CurSec0         2: templatesection;
2    var NewSec0         2: templatesection;
2    var CurCol,NewCol0  2: templatecolumn;
2    var CurCell,NewCel0 2:0 2templatecell;
2    var ТабДок0         2: ТабличныйДокумент;
    2var 0НаправлениеОбъединения  2: Целое;0 -- 0-Клетка, 1-Вниз, 2-Вправо, 3-Вправо-Вниз

2    CurSec = aStartColumn.Owner;
2    CurCol = CurSec.Column[aStartColumn.Number];

    --Так как "2templatesection0" неможет быть создан программно, то...
    2ТабДок0 = ТабличныйДокумент.Новый(Current);
    2NewSec0 = ТабДок.2ШаблонТекущМакета0.CurrentSection2;
    2NewSec0.Присвоить(2CurSec0);

    2NewSec0.Имя = 2CurSec0.Имя;  --Не забываем про имя Секции!!!

    Если 2NewSec0.ColumnsCount=1 Тогда
    --Удалять нечего!
    Иначе
      --Удаляем слево от нашей колонки...
      2NewSec0.DeleteColumn(2aStartColumn.Number0+1, (2NewSec0.ColumnsCount-1) );     --???  2NewSec0.ColumnsCount-2aStartColumn.Number
      --Удаляем справо от нашей колонки...
      2NewSec0.DeleteColumn(1, (2aStartColumn.Number0-1) );
    Илсе;

    2NewCol         = NewSec.Column0[210]2;0         --2NewCol0.Имя    2CurCol0.Имя    2NewSec0.Имя
    Если 2NewCol0.Имя <>2 CurCol0.Имя Тогда
      Трассировка("Странно... ");
    Илсе;
    --2NewCol0.Имя     2= CurCol0.Имя2;
2    0--2NewCol.Caption = CurCol.Caption;
2    0--2NewCol.Width   = CurCol.Width;
--    2NewCol0.Assign(2CurCol0);
2    for 0y2 = 1..NewSec.RowsCount do
2      CurCell0 2= CurSec.Cell[aStartColumn.Number , 0y2];
      2NewCel0  2= NewSec.Cell[012, 0                   y2];
2      0--2NewSec.Cell[012, 0y2].Assign(CurCell);

      НаправлениеОбъединения = -1;  -- Не определенная ситуация...
      Если   (CurCell.LinkedWidth=1 и CurCell.LinkedHeight=1) then
        НаправлениеОбъединения = 0;
      ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight=1) then
        НаправлениеОбъединения = 2;
      ЕслиЖе (CurCell.LinkedWidth=1 и CurCell.LinkedHeight>1) then
        НаправлениеОбъединения = 1;
      ЕслиЖе (CurCell.LinkedWidth>1 и CurCell.LinkedHeight>1) then
        НаправлениеОбъединения = 3;
      Илсе;

      if  (НаправлениеОбъединения=0) then   -- Отдельная клетка       CurCell.MasterCell = CurCell и     2NewSec0.Cell[1, y].Текст
        2NewSec0.Cell[1, y].Assign(CurCell);
      Иначе
        if НаправлениеОбъединения = 1 или НаправлениеОбъединения = 3 then
          2NewCel0.Assign(CurCell);

          2NewSec0.LinkCells(1, y, 1, CurCell.LinkedHeight);

          m = CurCell.LinkedHeight; --y = y + m
          y = Если(m=1, y, y + m - 1);
        elsif НаправлениеОбъединения=2  then  --Не объединяем вправо!!!
          2NewCel0.Assign(CurCell);
--          2NewSec0.LinkCells(1, y, 1, CurCell.LinkedHeight);
--                 n = CurCell.LinkedWidth;  --x = x + n
--                 x = Если(n=1, x, x + n - 1);
        end;
--      ELSE
--          -- Что это?
--        Трассировка("Не определенная ситуация... Клетка не определена!");
      end;
2    end;

    Результат = 2NewSec0;
    2ТабДок0 = 2NIL0;
  Кнуф;
2  -----------------------------------------------------------------
2  proc СформироватьКолонкиНачислений;
2    var i:integer;
2    var КолСт,КолНач: integer;
2    var Клетка: templatecell;

2    0ШаблонТекущМакета2.BeginModify;
2    try
2      Клетка = 0ШаблонТекущМакета2.CellByField["клПерНачШ"];
2      КолСт = Int(Клетка.owner.Column[Клетка.column-2].Caption);
2      if КолНач > 10 then
2        for i=1..10-1 do
2          ДобавитьКолонкуПоИмени("клПерНачШ");
2        end;
2      end;
2    finally
2      0ШаблонТекущМакета2.EndModify;
2    end;
2  end;
2  -----------------------------------------------------------------
2  --копирует столбцы, а caption увеличивает на 1, поэтому добавлять нужно в конец
2  proc КопироватьВерикальныйБлок(aStartColumn:TemplateColumn; aCount:integer=Nil);
2    var i,g,НомСтНовКл0  2: integer;
2    var CurCol,NewCol0   2: templatecolumn;
2    var CurSec0          2: templatesection;
2    var CurCell0         2: templatecell;
2    var БлокПоНадписи0   2: Логическое;
2    var ИмяБлока0        2: Строка;

2    CurSec = aStartColumn.Owner;
    2i0      2=0 20;
    2if aCount=Nil0 2then
      2aCount0 2       = 0;
      2БлокПоНадписи = Истина;
      2CurCol  0      2= CurSec.Column[aStartColumn.Number];

2      --"Блок Колонок" нужно как-то Обозначить.
2      --Вариант: "Блок Колонок" имеет одноименный -"Caption"!!!
    2 0 2ИмяБлока 0     2= CurCol.Caption;
      Пока 2ИмяБлока = CurCol.Caption0 ЦИКЛ
        2aCount0 2= aCount + 1;
        2CurCol = CurSec.Column[aStartColumn.Number + aCount];
      Лкиц;
    2end;

2    --добавим столбцы
   2 if0 2БлокПоНадписи0 2then
      2CurCol   = CurSec.Column[aStartColumn.Number];  --Текущая
    2 0 2ИмяБлока = CurCol.Caption;
      Пока 2ИмяБлока = CurCol.Caption0 ЦИКЛ
        2i0              2=0 2i + 1;
  2      CurCol         = CurSec.Column[      aStartColumn.Number + i          - 1];  --Текущая
  2      NewCol         = CurSec.InsertColumn(aStartColumn.Number + aCount + i - 1);  --Новая(Следующий Блок за текущим)
        2NewCol.0Name    2= CurCol.0Name2 +"_"+ Стр(CurCol.Number);
  2      NewCol.Caption =0 2CurCol.Caption;
  2      NewCol.Width   = CurCol.Width;
      Лкиц;
2    Иначе
  2    for i=1..aCount do
  2      CurCol         = CurSec.Column[      aStartColumn.Number + i          - 1];  --Текущая
  2      NewCol         = CurSec.InsertColumn(aStartColumn.Number + aCount + i - 1);  --Новая(Следующий Блок за текущим)
        2NewCol.0Name    2= CurCol.0Name2 +"_"+ Стр(CurCol.Number);
  2      NewCol.Caption = str( int(CurCol.Caption)+1 );
  2      NewCol.Width   = CurCol.Width;
  2    end;
    2end;
2    --скопируем клетки
2    for i = 1..CurSec.RowsCount do
2      for g = 1..aCount do
2        CurCell = CurSec.Cell[aStartColumn.Number +          g - 1, i];
2        НомСтНовКл =          aStartColumn.Number + aCount + g - 1;
2        if CurCell.IsMaster then --Мастер-клетка
2          CurSec.Cell[НомСтНовКл, i].Assign(CurCell);
2          CurSec.LinkCells(НомСтНовКл, i, CurCell.LinkedWidth, CurCell.LinkedHeight);
2        elsif CurCell.MasterCell = CurCell then -- Отдельная клетка
2          CurSec.Cell[НомСтНовКл, i].Assign(CurCell);
2        end;
2      end;
2    end;
2  end;
2  -----------------------------------------------------------------
2  proc СлитьКлетки0ВКолонке2 (НаимПоля:Строка; Колич : integer0 = Nil2);
2    var Клетка0 : templatecell;
    2var Column0 : integer;  --Начало Объединения
    2var 0Row200    2: integer;

    Если 2Колич0 = Nil Тогда
      2Колич0 = 0;
    Илсе;

2    0ШаблонТекущМакета2.beginmodify;
2    try
2       --растянем заголовок
2      Клетка0 = 0ШаблонТекущМакета2.CellByField[НаимПоля];

    2  Column0 = Клетка0.Column;                 -- Нашли номер Колонки
      Row200    2= Клетка0.0Row2;0                    2-- Нашли номер Строки
2      Клетка0.Owner.LinkCells(Column0, 0Row20, 012, Колич);  --????
2      --растянем заголовок
2    finally
2      0ШаблонТекущМакета2.endmodify;
2    end;
2  end;
2  -----------------------------------------------------------------
2  proc СлитьКлетки0ВСтроке2 (НаимПоля:Строка; Колич : integer0 = Nil2);
2    var Клетка0 : templatecell;
    2var Column0 : integer;  --Начало Объединения
    2var 0Row200    2: integer;

    Если 2Колич0 = Nil Тогда
      2Колич0 = 0;
    Илсе;

2    0ШаблонТекущМакета2.beginmodify;
2    try
2       --растянем заголовок
2      Клетка0 = 0ШаблонТекущМакета2.CellByField[НаимПоля];

    2  Column0 = Клетка0.Column;                 -- Нашли номер Колонки
      Row200    2= Клетка0.0Row2;0                    2-- Нашли номер Строки
2      Клетка0.Owner.LinkCells(Column0, 0Row20, Колич, 1);  --????
2      --растянем заголовок
2    finally
2      0ШаблонТекущМакета2.endmodify;
2    end;
2  end;
2  -----------------------------------------------------------------
2  proc ДобавитьКолонкуПоИмени (НаимПоля:Строка);
2    var Клетка,Клетка0 : templatecell;
    2var Column 0        2: integer;
    2var Column0 0       2: integer;

2    0ШаблонТекущМакета2.beginmodify;
2    try
2      Клетка = 0ШаблонТекущМакета2.CellByField[НаимПоля];
    2  Column0 2= Клетка.Column;                  -- Нашли номер Колонки
2      КопироватьВерикальныйБлок(Клетка.owner.column[Column], 1);
2       --растянем заголовок
      2--СлитьКлетки (НаимПоля, 1);
2      --растянем заголовок
2    finally
2      0ШаблонТекущМакета2.endmodify;
2    end;
2  end;
2  -----------------------------------------------------------------
2  proc УдалитьКолонкуПоИмени (НаимПоля:Строка);
2    var Клетка : templatecell;
    2var Column : integer;

2    Клетка = 0ШаблонТекущМакета2.CellByField[НаимПоля]; -- Нашли поле
    2Column0 2= Клетка.Column;                  0         2-- Нашли номер Колонки
2    Клетка.Owner.DeleteColumn(Клетка.Column-1, 1);

2  end;
2  --<НЕ МОЁ Доработать!!!
  -----------------------------------------------------------------

  -------------------------------------------------
  -------------------------------------------------
  функ Объединить(2НаимПоля0 2:0 2Строка0) : Логическое ;
  --Предполагается, что @2НаимПоля0@ это уникальное "Имя"/наименования для всего ШАБЛОНА!
  --Характеризуется Одной Секцией, Начальными и конечными координатами в Ней.
2    var Клетка : templatecell;
2    var Клетка0_Справо2 : templatecell;
2    var Клетка0_Внизу 2 : templatecell;
    2var Column0,Row,2Колич : integer;
    2var 0x,z, y2 : integer;
2    var CurSec0          2: templatesection;

--2    Клетка = 0ШаблонТекущМакета2.CellByField[НаимПоля]; -- Нашли поле

    Если 2Клетка = 0Nil Тогда
      y = SearchInArray (масПоИменованныхПолей2[012]0, 2НаимПоля0);
      if y=-1 then
      --???
      Иначе
        2Клетка = 0масПоИменованныхПолей2[02, y2]0;
        2Column0 2= Клетка.Column;                  0         2-- Нашли номер Колонки
        Row    2= Клетка.0Row2;                  0            2-- Нашли номер0 Строки
        2CurSec0 = 2Клетка.0Owner 2;

        2Клетка0_Справо = 2CurSec0.Cell2[Column0+1, Row  2];
        2Клетка0_Внизу  = 2CurSec0.Cell2[Column0,   Row+12];

        Если  2Клетка0_Справо.Текст = 2НаимПоля0 Тогда
          Для x = 2Column0.. 2CurSec0.КоличествоСтолбцов Цикл
            Если 2CurSec0.Cell2[0x, Row2]0.Текст    = 2НаимПоля0 ИЛИ
                 2CurSec0.Cell2[0x, Row2]0.Contents = 2НаимПоля
            Тогда    --2CurSec0.Cell2[0x, Row2]0.Contents
            Иначе
              2Колич0 = x-12;
              Прервать;
            Илсе;
          Лкиц;
2     0    2 CurSec.LinkCells(Column, 0Row2, 0 2Колич0-2Column0+12, 10    2);  --????
          Результат = Истина;
        Иначе
          Если 2Клетка0_Внизу.Текст = 2НаимПоля0 Тогда
            Для y = Row.. 2CurSec0.КоличествоСтолбцов Цикл
              Если 2CurSec0.Cell2[Column0, y2]0.Текст = 2НаимПоля0  Тогда
              Иначе
                2Колич0 = y-12;
                Прервать;
              Илсе;
            Лкиц;
2     0    2 0  2CurSec.LinkCells(Column, 0Row2, 0 21, 0    2Колич0-Row+12);  --????
            Результат = Истина;
          Илсе;
        end;
      end;
    Илсе;
--    2СлитьКлетки0ВКолонке2 (НаимПоля0,2 Колич);
--    2СлитьКлетки0ВСтроке 2 (НаимПоля0,2 Колич);
2  end;
  -------------------------------------------------
  функ Обновить (CuRent : ТабличныйДокумент = Nil) : Логическое ;
   2var0 i 2: integer;
    Если CuRent = Nil Тогда
      CuRent = Current;
    Илсе;
    Попытка
      CuRent.CurrentFrame                    = CuRent.2ШаблонТекущМакета0.CurrentFrame;
      CuRent.CurrentSection                  = CuRent.2ШаблонТекущМакета0.CurrentSection;

      CuRent.CurrentColumn                   = CuRent.CurrentSection.Column[CuRent.CurrentSection.ColumnsCount];
      CuRent.CurrentRow                      = CuRent.CurrentSection.Row   [CuRent.CurrentSection.RowsCount];

      CuRent.ВысотаТаблицы                   = ВернутьВысотуСтрок   (CuRent.CurrentSection);
      CuRent.ШиринаТаблицы                   = ВернутьШиринуСтолбцов(CuRent.CurrentSection);

      CuRent.ИмяТекущейСекции                = CuRent.CurrentSection.Имя;                                   --Перем
      CuRent.ИмяТекущейКолонки               = CuRent.CurrentColumn .Имя;                                   --Перем
      CuRent.ИмяТекущейСтроки                = CuRent.CurrentRow    .Имя;                                   --Перем

      Если
            (CuRent.ИмяТекущейСекции > "" или CuRent.ИмяТекущейКолонки > "" или CuRent.ИмяТекущейСтроки > "")
      Тогда
        CuRent.хКолРядов     = CuRent.CurrentSection.RowsCount;       -- ТабДок.2ШаблонТекущМакета0.CurrentSection.Имя   ТабДок.2ШаблонТекущМакета0=2ТекущШаблон
        CuRent.хКолСтолбцов  = CuRent.CurrentSection.ColumnsCount;

        CuRent.ВзятьВсеФреймы2Бланка0                2 0(CuRent.2ШаблонТекущМакета.0RootFrame2, 0CuRent.Фреймы); -- Массив всех Фреймов в Бланке
        CuRent.мас2Области0                           = Nil;
        CuRent.ЗаполнитьПоИменованныеОбъектыШаблона2 0(CuRent.мас2Области0,                  CuRent.Фреймы);
        CuRent.масПоИменованныхПолей                = Nil;
        CuRent.ЗаполнитьИменаПолей                 2 0(CuRent.Фреймы);                              -- ТабДок.масПоИменованныхПолей
      Илсе;

      КоличествоСтраниц;

      CuRent.2ТаблицаПуста0 2= Ложь0;
      Current = CuRent;  --????
      Результат  = Истина;
      Style = Nil;
      for i=1.. CuRent.2ШаблонВывода0.StylesCount do
        ВставитьВМассив (Style, i, CuRent.2ШаблонВывода0.Style[i].Имя);   -- 2ШаблонВывода0.StylesCount    2ШаблонТекущМакета
      end;

    Исключение
      Результат  = 2Ложь0;
    Конец;

  конец;
  -------------------------------------------------

  функ КоличествоСтраниц  синоним PageCount : Целое ;

    Если ВысотаСтраницы=02 0Тогда
      Результат2 = 1;
2    Иначе
      Если ВысотаТаблицы2>0ВысотаСтраницы Тогда
        Результат = Цел(ВысотаТаблицы/ВысотаСтраницы);2 --  ?????
      2Иначе
        Результат2 = 1;
      Илсе;

    Илсе;
  конец;
  -------------------------------------------------
  функ НайтиЗначение синоним FindValue : ТабличныйДокумент ;
    
    --Результат = Область;
  конец;
  -------------------------------------------------
  функ НайтиТекст    синоним FindText  :ТабличныйДокумент;
    
    --Результат = Область;
  конец;
  -------------------------------------------------
  Функ ВзятьВсеФреймы2Бланка0   (TempSec:2 0ФреймШаблона2; 0var2 arr0Temp2 0: ФреймШаблона2[] = Nil0) :Целое;
--Для поиска "Нашей" секции в бланке!
    var j,N    : Integer;

      Если TempSec=2Nil0 Тогда
      2Иначе
        N=TempSec.FramesCount;                         -- Кол. Фреймов в бланке
        Если N=200 и ДлинаМассива(2arr0Temp)=0 Тогда       -- Кол. Фреймов в бланке2 = 0.0 RootFrame2!
--        Если N=200 и ДлинаМассива(Фреймы)=0 Тогда      -- Кол. Фреймов в бланке2 = 0.0 RootFrame2!
           ВставитьВМассив (2arr0Temp, 1 , TempSec );
        2Иначе
           for j= 1..  N  do                             -- Цикл по Фреймам бланка
             ВставитьВМассив (2arr0Temp, ДлинаМассива(2arr0Temp)+1 , TempSec.Frame[j] );
             ВзятьВсеФреймы2Бланка0 (TempSec.Frame[j]2, arr0Temp);
           end;
        Илсе;
      Илсе;

    Результат = ДлинаМассива(2arr0Temp);
  Кнуф;
  -------------------------------------------------
  Функ ЗаполнитьПоИменованныеОбъектыШаблона  (var мас2Обл0 :2 0Вариант2[022]0;   Фреймы :2 0ФреймШаблона2[]0) :Логическое;
    var j,z,x,k      : Integer;
    var ColumnsCount : Integer;
    var RowsCount    : Integer;
    var Sect         : TemplateSection ;

    -- мас2Области0 = Nil;
    for j=1.. ДлинаМассива(Фреймы)  do            -- По Фреймам бланка...
      for z=1.. Фреймы[j].SectionsCount  do       -- По Секц. Фрейма
        Sect = Фреймы[j].Section[z];
        Если Sect.Имя = "" Тогда
          --Sect.Имя = Стр(z);  --????Насколько это необходимо
        Иначе
          k  =  LengthOfArray (мас2Обл0[1]);
  2        0ВставитьВМассив (мас2Обл0[1], 1+k, 2Up(0Sect.Имя)2     0);
  2        0ВставитьВМассив (мас2Обл0[220], 1+k, Sect2    0     2    0);
  2        0ВставитьВМассив (мас2Обл0[230], 1+k, Фреймы[j]    2    0);
          ВставитьВМассив (мас2Обл0[4], 1+k, 2Up(0Фреймы[j].Имя));
        Илсе;
        --Поиск Именованных Колонок
        ColumnsCount = Sect.ColumnsCount;
        for x=1.. ColumnsCount  do
          Если Sect.Column[x].Имя = "" Тогда
            --Sect.Column[x].Имя  = Стр(x);
          Иначе
--          Если Sect.Column[x].Надпись = "" Тогда
--            --Sect.Column[x].Надпись  = Стр(x);
--          Илсе;
            k  =  LengthOfArray (мас2Обл0[1]);
    2        0ВставитьВМассив (мас2Обл0[1], 1+k, 2Up(0Sect.Column[x].Имя));
    2        0ВставитьВМассив (мас2Обл0[220], 1+k, Sect.Column[x]2    0    );
    2        0ВставитьВМассив (мас2Обл0[230], 1+k, Sect     2         0    );
    2        0ВставитьВМассив (мас2Обл0[4], 1+k, 2Up(0Sect.Имя) 2     0    );
          Илсе;
        Od;
        --Поиск Именованных Строк
        RowsCount = Sect.RowsCount;
        for x=1.. RowsCount  do
          Если Sect.Row[x].Имя = "" Тогда
--            Sect.Row[x].Имя = Стр(x);
          Иначе
--          Если Sect.Row[x].Надпись = "" Тогда
--            Sect.Row[x].Надпись = Стр(x);
--          Илсе;
            k  =  LengthOfArray (мас2Обл0[1]);
    2        0ВставитьВМассив (мас2Обл0[1], 1+k, 2Up(0Sect.Row[x].Имя));
    2        0ВставитьВМассив (мас2Обл0[220], 1+k, Sect.Row[x]2    0    );
    2        0ВставитьВМассив (мас2Обл0[230], 1+k, Sect     2      0    );
            ВставитьВМассив (мас2Обл0[4], 1+k, 2Up(0Sect.Имя) 2  0    );
          Илсе;
        Od;
      Od;
    Od;

    Результат = (ДлинаМассива(мас2О0б2л0)>0) ;

  Кнуф;
  -------------------------------------------------
  func ЗаполнитьИменаПолей (Фреймы :2 0ФреймШаблона2[]0) : Логическое ;
    var j,z,x,y,a,n,m: Integer;
    var ColumnsCount : Integer;
    var RowsCount    : Integer;
    var НаправлениеОбъединения : Integer;
    var Sect         : TemplateSection ;
    var локCell      : TemplateCell ;

      масПоИменованныхПолей = Nil; a = 0;
      for j=1.. ДлинаМассива(Фреймы)  do            -- По Фреймам бланка...
        for z=1.. Фреймы[j].SectionsCount  do       -- По Секц. Фрейма
          Sect = Фреймы[j].Section[z];              -- Sect.Имя
          RowsCount    = Sect.RowsCount;
          ColumnsCount = Sect.ColumnsCount;
          for x=1.. ColumnsCount  do
            for y=1.. RowsCount  do
              локCell = Sect.Клетка[x, y] ;  --
              --if локCell.CellType = Kernel.Template.FieldCell then  --Только ввода/Вывода

               Если локCell.Contents="" и локCell.Текст="" и локCell.Caption=""   Тогда
               Иначе
                  НаправлениеОбъединения = -1;  -- Не определенная ситуация...
                  Если   (локCell.LinkedWidth=1 и локCell.LinkedHeight=1) then
                    НаправлениеОбъединения = 0;
                  ЕслиЖе (локCell.LinkedWidth>1 и локCell.LinkedHeight=1) then
                    НаправлениеОбъединения = 2;
                  ЕслиЖе (локCell.LinkedWidth=1 и локCell.LinkedHeight>1) then
                    НаправлениеОбъединения = 1;
                  ЕслиЖе (локCell.LinkedWidth>1 и локCell.LinkedHeight>1) then
                    НаправлениеОбъединения = 3;
                  Илсе;
                 Если2 0НаправлениеОбъединения=0 2then
                   a = a + 1;
                   ВставитьВМассив( масПоИменованныхПолей[1], a, локCell.Contents );   -- Переменная
                   ВставитьВМассив( масПоИменованныхПолей[2], a, локCell          );   -- Клетка
                 ЕслиЖе2 0НаправлениеОбъединения=1 2then0      --
                   m = локCell.LinkedHeight; --y = y + m
                   y = Если(m=1, y, y + m - 1);

                   a = a + 1;
                   ВставитьВМассив( масПоИменованныхПолей[1], a, локCell.Contents );   -- Переменная
                   ВставитьВМассив( масПоИменованныхПолей[2], a, локCell          );   -- Клетка
                   -- ПРЕРВАТЬ;
                 ЕслиЖе2 0НаправлениеОбъединения=22 then0      --
                   a = a + 1;
                   ВставитьВМассив( масПоИменованныхПолей[1], a, локCell.Contents );   -- Переменная
                   ВставитьВМассив( масПоИменованныхПолей[2], a, локCell          );   -- Клетка
                   -- ПРЕРВАТЬ;
                 ЕслиЖе2 0НаправлениеОбъединения=32 then0      --
--                   n = локCell.LinkedWidth;  --x = x + n
--                   x = Если(n=1, x, x + n - 1);
                   m = локCell.LinkedHeight; --y = y + m
                   y = Если(m=1, y, y + m - 1);

                   a = a + 1;
                   ВставитьВМассив( масПоИменованныхПолей[1], a, локCell.Contents );   -- Переменная
                   ВставитьВМассив( масПоИменованныхПолей[2], a, локCell          );   -- Клетка
                   -- ПРЕРВАТЬ;
                 Иначе
                   a = a + 1;
                   ВставитьВМассив( масПоИменованныхПолей[1], a, локCell.Contents );   -- Переменная
                   ВставитьВМассив( масПоИменованныхПолей[2], a, локCell          );   -- Клетка
                 Илсе;
               Илсе;
              --Илсе;
            Od;
          Od;
        Od;
      Od;
    Результат = (a > 0) ;
  Кнуф;
  -------------------------------------------------
  Функ ВзятьСекциюПоИмени     (ШАБЛОН: Template; Имя: Строка):  TemplateSection;
    var j,z  : Integer;
    var Sect : TemplateSection;
      Результат =2 Nil0; Фреймы =2 Nil0;
      ВзятьВсеФреймы2Бланка0 (ШАБЛОН.RootFrame2, 0Фреймы); -- Массив всех Фреймов в Бланке
      for j=1.. ДлинаМассива(Фреймы)  do               -- По Фреймам бланка...
        for z=1.. Фреймы[j].SectionsCount  do          -- По Секц. Фрейма
          Sect = Фреймы[j].Section[z];
          если Sect.Имя = Имя тогда  2 0 -- Если наша секция
              Результат = Sect;
              ВОЗВРАТ;
          конец;
        Od;
      Od;
  Кнуф;
  -------------------------------------------------
  func ИндексСтроки           (const Cell :TemplateCell) :Integer;
    var locSec :TemplateSection;

    locSec = Cell.Section;
    if locSec.EnableRepeat and locSec.Count > 0 then
      if locSec.Subtable <> nil then
        Result = Int(locSec.Subtable.IndexByNumber[Cell.Frame]) + 1;
      else
        Result = Cell.Frame;
      end;
    end;
  end;
  -------------------------------------------------

  func ЕстьДанные (Temp:Вариант=Nil) : Логическое;
    var i : Целое;
      Result = Ложь;
      Если Temp = Nil Тогда
        i = SearchInArray(мас2Области0[1], "ДАННЫЕ");
        Если i=-1 Тогда
          Трассировка("В шаблоне, таблица данных с именем:'ДАННЫЕ' - отсутствует!");
          Result = Ложь;
        Иначе
           Если мас2Области0[220,i] = Nil Тогда
           Иначе
             Данные = мас2Области0[220,i];
             Если Данные.ColumnsCount >1 или
                  Данные.RowsCount    >1 Тогда
                Result = Истина;
             end;
           end;
        end;
      Иначе
        i = SearchInArray(мас2Области0[1], Up(TEMP));
        Если i=-1 Тогда
          Трассировка("В шаблоне, таблица данных с именем:'" +TEMP+ "' - отсутствует!");
          Result = Ложь;
        Иначе
           Если мас2Области0[220,i] = Nil Тогда
           Иначе
             Данные = мас2Области0[220,i];
             Если Данные.ColumnsCount >1 или
                  Данные.RowsCount    >1 Тогда
                Result = Истина;
             end;
           end;
        end;
      end;
  end;
  -------------------------------------------------
  func ВзятьДанные( Temp:Вариант=Nil; ТИПП : Integer=Nil):Вариант;
    var i,X,Y           : Целое;
    var Вертикально     : Логическое;
    var Горизонтально   : Логическое;
    var Приводить       : Логическое;
    var ТипыПолей       : Вариант[];
    var Сообщ           : Строка;
    var Contents        : Строка;
2  0  2var ТекущаяОбласть 0 2: 0Вариант2;0 --Нужен Вариант именно "Структуры"!!!
    var ТМП             : Вариант[1];
    var ТМП2            : Вариант[2];
    var НеПриводить     : Логическое;

     i = 0; Сообщ ="";
     ТипыПолей       = Nil;
     Вертикально     = Ложь;
     Горизонтально   = Ложь;
     Приводить       = Ложь;

     НеПриводить = (ТИПП in [Nil, 0]);

     Если Temp = Nil Тогда
     Иначе
       -- Temp = 2Текущ0ая2Область0;
     end;
        если ЕстьДанные( Temp ) Тогда
        --Определяем Структуру данных
          если ЕстьТипы  Тогда
            Приводить = Истина;
            Если Типы.ColumnsCount = 1 Тогда -- Только Так!!
              Вертикально = Истина;
              для X = 1.. Типы.RowsCount цикл
                ВставитьВМассив(ТипыПолей, X, ВернутьТипПоля(Типы.Клетка[1,X].Contents) );
              конец;
            end;
            Если Типы.RowsCount    = 1 Тогда -- Только Так!!
              Горизонтально = Истина;
              для Y = 1.. Типы.ColumnsCount цикл
                ВставитьВМассив(ТипыПолей, Y, ВернутьТипПоля(Типы.Клетка[Y,1].Contents) );
              конец;
            end;
          конец;

          если i = 0 Тогда  --Данные без "Заголовков"
             Если Данные.RowsCount>1 Тогда   --Двумерный
               ТМП2 = (ТМП2 as Вариант[2]);
               Для Y = 1.. Данные.RowsCount цикл
                 для X = 1.. Данные.ColumnsCount цикл
                    Contents = Данные.Клетка[X,Y].Contents ;
                    если НеПриводить Тогда --Нет Типа полей!
                      ВставитьВМассив(ТМП2[Y], X, Contents);
                    Иначе
                      ВСТАВИТЬВМАССИВ(ТМП2[Y], X, ИзСтроки(ТИПП, Contents));
                    конец;
                 конец;
               Лкиц;
             Иначе                           --Одномерный
               Y = 1;
               ТМП = (ТМП as Вариант[1]);
               для X = 1.. Данные.ColumnsCount цикл
                 ВставитьВМассив(ТМП, X, Данные.Клетка[X,Y].Contents);
               конец;
             Илсе;
          конец;
        конец;

        Если ТМП2=Nil Тогда
          Если   ТИПП in [Nil, 0, 1] Тогда -- "Мода".
            Result = ТМП  as Строка[];
          ЕслиЖе ТИПП in [2] Тогда
            Result = ТМП  as Целое [];
          ЕслиЖе ТИПП in [3] Тогда
            Result = ТМП  as Число [];
          ЕслиЖе ТИПП in [5] Тогда
            Result = ТМП  as Дата  [];
          Илсе;
        Иначе 
          Если   ТИПП in [Nil, 0, 1] Тогда -- "Мода".
            Result = ТМП2  as Строка[2];
          ЕслиЖе ТИПП in [2] Тогда
            Result = ТМП2  as Целое [2];
          ЕслиЖе ТИПП in [3] Тогда
            Result = ТМП2  as Число [2];
          ЕслиЖе ТИПП in [5] Тогда
            Result = ТМП2  as Дата  [2];
          Илсе;
        Илсе;
  end;
  -------------------------------------------------
  func ВернутьТипПоля( Тип_Клетки :Строка): Вариант ;
    Тип_Клетки = Up(Тип_Клетки);
    ЕСЛИ   ТИП_КЛЕТКИ="СТРОКА" ИЛИ ТИП_КЛЕТКИ="STRING"  ТОГДА
       RESULT = "СТРОКА";
    ЕСЛИЖЕ ТИП_КЛЕТКИ="ЧИСЛО"  ИЛИ ТИП_КЛЕТКИ="NUMERIC" ИЛИ ТИП_КЛЕТКИ="REAL"  ТОГДА
       RESULT = "ЧИСЛО";
    ЕСЛИЖЕ ТИП_КЛЕТКИ="ЦЕЛОЕ"  ИЛИ ТИП_КЛЕТКИ="INTEGER" ИЛИ ТИП_КЛЕТКИ="ЦЕЛЫЙ" ТОГДА
       RESULT = "ЦЕЛОЕ";
    ЕСЛИЖЕ ТИП_КЛЕТКИ="ДАТА"   ИЛИ ТИП_КЛЕТКИ="DATE"    ТОГДА
       RESULT = "ДАТА";
    ЕСЛИЖЕ ТИП_КЛЕТКИ="ЛОГИЧЕСКОЕ" ИЛИ ТИП_КЛЕТКИ="ЛОГИЧЕСКИЙ" ИЛИ ТИП_КЛЕТКИ="LOGICAL" ТОГДА
       RESULT = "ЛОГИЧЕСКОЕ";
    ИНАЧЕ
       RESULT = "ВАРИАНТ";
    end;
  end;
  -------------------------------------------------
  func ЕстьИменаКолонок:Логическое;
    var i : Целое;
      ИменаКолонок = Nil;
      Result       = Ложь;
      i = SearchInArray(мас2Области0[1], "ИменаКолонок");
      Если i=-1 Тогда
      Иначе
         Если мас2Области0[220,i] = Nil Тогда
         Иначе
           ИменаКолонок = мас2Области0[220,i];
           Если ИменаКолонок.ColumnsCount > 1 и ИменаКолонок.RowsCount = 1 Тогда --Только Так!
              Result = Истина;
           end;
         end;
      end;
  end;
  -------------------------------------------------
  func ЕстьТипы :Логическое;
    var i  : Целое;
      Типы   = Nil;
      Result = Ложь;
      i = SearchInArray(мас2Области0[1], "Типы");
      Если i=-1 Тогда
      Иначе
         Если мас2Области0[220,i] = Nil Тогда
         Иначе
           Типы = мас2Области0[220,i];
--           Если Типы.ColumnsCount = 1 и Типы.RowsCount > 1 Тогда -- Только Так!!
           Result = Истина;
--           end;
         end;
      end;
  end;
  -------------------------------------------------
  func ЕстьИмена :Логическое;
    Result = Ложь;
    Если ЕстьИменаКолонок Тогда
      Result = Истина;
    end;
  end;
  -------------------------------------------------
  proc ПриУничтожении Синоним OnDestroy;

   Если Current = nil Тогда
--      Трассировка("При выполнении - 'OnDestroy' для 'Current', пустой Объект 'Табличный Документ'!");
   Иначе

--      НомерОбъекта = Current.ЧислоОбъектов;
--      ИмяОбъекта   = "Табличный Документ - " + Стр(НомерОбъекта);
--      Трассировка("Уничтожение объекта - "+ИмяОбъекта);
--
--     Current.Параметры = nil;
     Current = nil;        -- Self
   Илсе;
   Если Self = nil Тогда
--      Трассировка("При выполнении - 'OnDestroy' для 'Self', пустой Объект 'Табличный Документ'!");
   Иначе

--      НомерОбъекта = Self.ЧислоОбъектов;
--      ИмяОбъекта   = "Табличный Документ - " + Стр(НомерОбъекта);
--      Трассировка("Уничтожение объекта - "+ИмяОбъекта);
--
--     Self.Параметры = nil;
     Self = nil;        -- Self
   Илсе;

  end;
  -------------------------------------------------
  proc Очистка ;
     Функции.Очистка;
  end;
  -------------------------------------------------
--}
end

