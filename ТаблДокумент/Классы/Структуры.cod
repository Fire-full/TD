class "Структурированные Данные";

--Import  Classes Макет, Области, Функции;
Import   Classes ТабличныйДокумент, Функции;
-----------------------------------------------------------------------------------
----------------------------НАЧАЛО!!-----------------------------------------------
-----------------------------------------------------------------------------------
inclass -- Public -- Private



  func   Новый  синоним On ( t: Вариант = Nil ) :2 0ТаблДокумент.Структуры;
       Result = inherited Create;
--       ВставитьВМассив(МоиОбъекты, ДлинаМассива(МоиОбъекты)+1, Result);
       Result.Own = t;
       Result.Init(Result);
       Result.Параметры = ТаблДокумент.Параметры.Новый(Result);
  end ;

--inobject Public

--2  var ТекущаяОбласть synonym Current : 0Вариант[2]2;0 --Нужен Вариант именно "Структуры"!!!

inobject Public

 Пустой                 : Логическое ;                      --  var
                                                            --
 Параметры              : Параметры;                        --  var
                                                            --
 БланкМакета            : BlankForm;                        --  var
 Sec                    : TemplateSection;                  --  var
 CurrentSection         : TemplateSection;                  --  var
 ColumnsCount           : Целое ;                           --  var
 RowsCount              : Целое ;                           --  var
                                                            --
 Текущая                : Целое;                            --  var
 Current                : ТаблДокумент.Структуры;                        --  var
 Имя                    : Строка;                           --  var
 Значение               : Вариант;                          --  var
 НомерОбъекта           : Целое;                            --  var
 ИмяОбъекта             : Строка;                           --  var
 Хозяин  Synonym  Own   : Вариант;                          --  var
 2ШаблонТекущМакета   0   : 2template0;                         --  var                                   --Перем

  proc Init( Cl :2 0ТаблДокумент.Структуры);
    var lClass    :Класс BlankForm;

    Clear;

    Current = Cl;

    НомерОбъекта = Current.ЧислоОбъектов;
    ИмяОбъекта   = "СтруктурЫ_" + Стр(НомерОбъекта);
        --!!!!!!!!!!!!!!!!!!!!!!!!
    lClass      = СИС2.ФункцииКонсоли.НайтиФормуБланка("ВременныйБланк");
    БланкМакета = lClass.Новый(Cl);
    Если БланкМакета.SecTemp=Nil Тогда
     Сообщение ("При создании объекта - 'Структуры', несоздан шаблон -'Временного бланка'. Ошибка!");
    Илсе;
    2ШаблонТекущМакета0 = БланкМакета.Шаблон;
    Пустой      = Истина;
    Имя         = "";
    Значение    = Nil;
    Текущая     = 0;

  end ;

--Вставить (Insert)
--Количество (Count)
--Очистить (Clear)
--Свойство (Property)
--Удалить (Delete)

  func Вставить ( ИмяПоля:Строка; ЗначениеПоля : Вариант = Nil; var ТипП : VarTypes = Nil)  : Логическое ;
    var i        : Целое;
    var Row      : TemplateRow;
    var Column   : TemplateColumn;
    var ThisCell : TemplateCell;

    var ПоляНет  : Логическое ;
    var ТМП      : Вариант[1];

     Обновить;

     --{Проверка "Поля"
     Если СтолбецПоИмени(Sec, ИмяПоля) = Nil Тогда
     --Если Sec.КлеткаПоПолю[ИмяПоля] = Nil Тогда  --Поля НЕТ, создаем!
        ПоляНет = Истина;
     Иначе
        ПоляНет = Ложь;
     Илсе;
     --}Проверка "Поля"

     --{Проверка Строк и Колонок
     Если Пустой Тогда    -- ColumnsCount=1 и
       Column = Sec.Column[1];
       Row    = Sec.Row   [1];
     Иначе
       Если ПоляНет Тогда
         Column = Sec.InsertColumn(ColumnsCount+1, 1);
       Илсе;
       Row = Sec.Row[RowsCount];
     Илсе;
     --}Проверка Строк и Колонок

     Обновить ;

     Column.Имя     = ИмяПоля;
     Column.Надпись = ИмяПоля;

     --{Записываем "Содержимое "
     IF VarType(ЗначениеПоля)=8 then        --Массив
       ТМП = (ЗначениеПоля as Вариант[1]);
       Если ДлинаМассива(ТМП)=RowsCount Тогда
       Иначе
         Если ДлинаМассива(ТМП)>RowsCount Тогда
           Для i = 1..ДлинаМассива(ТМП) Цикл
             Если i<RowsCount Тогда
             иначе
               Sec.InsertRow( i+1, 1);
             Илсе;
             Sec.Клетка[Column.Номер, i].Contents = ТМП[i];
             Обновить ;
           Лкиц;
         Илсе;
       Илсе;
     Иначе

       ThisCell           = Sec.Cell[Column.Номер,Row.Номер];
       ThisCell.ReadOnly  = Ложь;
       ThisCell.FieldType = Kernel.Template.StaticText;
       ThisCell.CellType  = Kernel.Template.StaticCell;
       ThisCell.Contents  = ЗначениеПоля;        -- Смотрим Содержимое  ThisCell.Text;

     Илсе;
     --}Записываем "Содержимое "

     Обновить;

     Пустой = Ложь;

    Результат = Истина;
  end;

  Функ Следующий синоним Next : Логическое ;
    Если Текущая=0 Тогда
      Текущая = 1;
    Иначе
      Текущая = Текущая + 1;
    Илсе;
    Если Текущая<=ColumnsCount Тогда

      Обновить ;

      Имя      = БланкМакета.SecTemp.Column[Текущая]   .Имя;
      Значение = БланкМакета.SecTemp.Клетка[Текущая, 1].Contents;
    Иначе
      -- БланкМакета.SecTemp.КлеткаПоПолю[Значение].Text         Поле Содержимое / Contents  Поле Значение / Value   Поле Текст / Text
    Илсе;

    Результат = Если(Текущая<=ColumnsCount, Истина, Ложь);
  Кнуф;


  Функ Количество синоним Count  : Целое ;
    Обновить ;
    Результат = ColumnsCount;
  Кнуф;

  func Обновить : Логическое;

   Sec          = Если(БланкМакета=Nil, Nil, БланкМакета.SecTemp);
   CurrentSection = Sec ;
   ColumnsCount = Sec.ColumnsCount;
   RowsCount    = Sec.RowsCount;

  end;

  func Очистить      synonym Clear : integer;

       Имя            = ""2;
       Хозяин         = Nil2;
--       CurrentColumn  = Nil2;
--       CurrentRow     = Nil2;
       RowsCount      = 0;
       ColumnsCount   = 0;

  end;
-----------------------------------------------------------------------------------
  proc OnDestroy;


   Если Current = nil Тогда
--      Трассировка("При выполнении - 'OnDestroy' для 'Current', пустой Объект 'Структура'!");
   Иначе

--      НомерОбъекта = Current.ЧислоОбъектов;
--      ИмяОбъекта   = "Структура - " + Стр(НомерОбъекта);
--      Трассировка("Уничтожение объекта - "+ИмяОбъекта);

     Current = nil;        -- Self
   Илсе;
   Если Self = nil Тогда
--      Трассировка("При выполнении - 'OnDestroy' для 'Self', пустой Объект 'Структура'!");
   Иначе

--      НомерОбъекта = Self.ЧислоОбъектов;
--      ИмяОбъекта   = "Структура - " + Стр(НомерОбъекта);
--      Трассировка("Уничтожение объекта - "+ИмяОбъекта);

     Self = nil;        -- Self
   Илсе;


  end;
-----------------------


-----------------------------------------------------------------------------------
----------------------------КОНЕЦ!!!-----------------------------------------------
-----------------------------------------------------------------------------------
end