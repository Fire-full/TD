Class "Параметры"  ;
--
--Import           Classes ТабличныйДокумент;
--
inclass Public
--
  func  Новый  синоним On ( t: Вариант = Nil ) :2 0ТаблДокумент.Параметры ;                   --  var
       Result = inherited Create;                                                          --  var
       Result.Own = t;                                                                     --  var
       Result.Init(Result);                                                                --  var
  end ;                                                                                    --  var
--                                                                                         --  var
--                                                                                         --  var
inobject Public                                                                            --  var
--
--
 Хозяин           Synonym Own   : Вариант;  -- Хозяин свойств!!!
 CurrentParameter               : integer;
 СтруктураПолейЗаполнена        : Логическое;
 НомерОбъекта                   : integer;
 ИмяОбъекта                     : Строка;
 Имя                            : Строка;
 CurrentSection                 : TemplateSection ;
 ИмяSec                         : Строка          ;
-- CurrentSection                 : TemplateSection = Если(Хозяин=Nil, Nil, Хозяин.2ШаблонТекущМакета0.ТекущаяСекция);  -- CurrentSection : TemplateSection;
-- ИмяSec                         : Строка          = Если(CurrentSection=Nil, "", CurrentSection.Имя)                ;
--
  proc Init( t :2 0ТаблДокумент.Параметры );
    CurrentParameter        = 0;
    СтруктураПолейЗаполнена = Ложь;
--    Хозяин                  = self.ParentClass ;  -- self.ClassInfo.Parent.Имя   Owner .Пар.Owner    Пар.ТипКласса.Значение
--      if Хозяин = nil then
--        Message("У класса:"+ Пар.ClassName + " нет родительского");    self.Own = Хозяин
--      fi;
    НомерОбъекта = self.ЧислоОбъектов;        --  self.Own.Имя
    ИмяОбъекта   = "ПараметрЫ_" + Стр(НомерОбъекта);

    Обновить ;

  end ;
  proc Обновить ;

      --  Хозяин.CurrentSection : TemplateSection;
    Если Хозяин=Nil Тогда
       CurrentSection  = Nil;
       ИмяSec          = "";
    Иначе
--       Если Хозяин есть ТабличныйДокумент Тогда
         CurrentSection        = Хозяин.2ШаблонТекущМакета0.ТекущаяСекция;
         Хозяин.CurrentSection = CurrentSection;
         ИмяSec                = CurrentSection.Имя;
--       Иначе
--       Илсе;
    Илсе;

  end ;

  func Количество      Synonym  Count (2var locSec :0 Вариант = nil) : integer;

Обновить ;
     Если 2locSec0 = nil Тогда
       Result = ДлинаМассива(Хозяин.масПоИменованныхПолей[1]);
       СтруктураПолейЗаполнена = Истина;
     Иначе
       ЕСЛИ VarType(2locSec0) = varInt then
         Result = 2locSec0;
       Илсе;
     Илсе;
  end;

  func Получить      Synonym    Get (Var I : integer=0) : Вариант ;

     Обновить ;
     Result = Хозяин.масПоИменованныхПолей[I];
     Result = CurrentSection.КлеткаПоПолю[Result].Contents ;

  end;

  func ИмяПоНомеру   Synonym    GetNByNum (Var I : integer=0) : Строка ;

Обновить ;
     Result = Хозяин.масПоИменованныхПолей[I];
  end;

  func Установить    Synonym    Set (Парам : Вариант=Nil; 2loc0Var2 :0Вариант ) : Логическое ;

Обновить ;
     Если   VarType(Парам) = varInt    Тогда     -- Индекс
         --масПоляСтруктур[2, Парам] = 2loc0Var;
     ЕслиЖе VarType(Парам) = varString Тогда     -- Имя Поля
        -- ЗаполнитьПараметр ( Парам,  2loc0Var);
--     ЕслиЖе VarType(2loc0Var) = varObject Тогда  -- Объект
--         ЗаполнитьПараметр ( Парам,  2loc0Var);
     Илсе;
      Result = Истина;
  end;

  func Заполнить     Synonym   Fill (Данные2 :0Вариант;2 loc0Знач2 :0Вариант=Nil) : Логическое;
    var I,x        : Целое;
    var Структ     : Структура;
    var ТМП        : Вариант[1];
    var ТМП2       : Вариант[2];
    var ThisCell   : TemplateCell;

      Обновить ;
      Result = Ложь;

      IF Данные is Структура then      -- VarType(Данные)=6 (Объект)
        Структ = (Данные as Структура);
--        IF СтруктураПолейЗаполнена then   --Исключаю многократное заполнение массива однотипными данными!
--        Иначе
--          x     = Ядро.Структура.ClassInfo.MembersCount;
--          for I = x+1 .. Структ.ClassInfo.MembersCount do
--            Член = Структ.ClassInfo.Member[I];
--            IF Член is FieldInfo then      --Только имена полей!!
--              ВставитьВМассив (масПоляСтруктур[1], ДлинаМассива(масПоляСтруктур[1])+1, Up(Член.Name)); --ТипДвижения ДополнительныеПоля
--            Fi;
--          Od;
--        Fi;
--        Если масПоляСтруктур[1]=nil Тогда
--          СтруктураПолейЗаполнена = Ложь;
--        Иначе
--          СтруктураПолейЗаполнена = Истина;
--          for I = 1 .. ДлинаМассива(масПоляСтруктур[1]) do
--             масПоляСтруктур[2,I] = Данные.GetField(масПоляСтруктур[1,I]);
--          Od;
--          ДанныеПолейЗаполнены = Истина;
--        Илсе;
      ЕСЛИЖЕ VarType(Данные) = varString Тогда   --Имя поля
        ThisCell = Own.CurrentSection.КлеткаПоПолю[Данные];
        if  ThisCell=Nil then
          Трассировка("Поле '"+Данные+"' в Шаблоне - нет!");   --  Хозяин.2ШаблонТекущМакета0.Field = Данные.Имя;
        Иначе
           ThisCell.ReadOnly  = Ложь;
           ThisCell.FieldType = Kernel.Template.StaticText;
           ThisCell.CellType  = Kernel.Template.StaticCell;
           ThisCell.Contents  = 2loc0Знач;        -- Смотрим Содержимое  ThisCell.Text;
           Result = Истина;
        конец;
      ЕСЛИЖЕ VarType(Данные) = varArray Тогда   --8 = Массив
        --Массив может быть ДВУМЕРНЫЙ:  Массив[1]-"ИмяПоля"  Массив[2]-"ЗначениеПоля"
--        масПоляСтруктур = Nil;
           if Данные is Variant[2] then
             ТМП2 = Данные as Вариант[2];
--             масПоляСтруктур[1] = ТМП2[1];
--             масПоляСтруктур[2] = ТМП2[2];
           Иначе
             ТМП  = Данные as Вариант[1];
             for I = 1 .. ДлинаМассива(ТМП) do
--               ВставитьВМассив (масПоляСтруктур[1], I, I);
             Od;
--             масПоляСтруктур[2] = ТМП;
           конец;
      ЕСЛИЖЕ Данные.ClassType = СтруктурЫ Тогда
          Данные = (Данные как СтруктурЫ);
          if Данные.ColumnsCount > 0 and
              Данные.RowsCount   > 0 then
                                           -- Хозяин.2ШаблонТекущМакета0.ТекущаяСекция.КоличествоСтрок
--            for I = 1 .. CurrentSection.КоличествоСтрок do
--              for x = 1 .. CurrentSection.КоличествоСтолбцов  do
--                CurrentSection.Клетка[x,I].Contents;   --или CurrentSection.Клетка[x,I].Text или CurrentSection.Клетка[x,I].Value   Хозяин.2ШаблонТекущМакета0.Field = "Контрагент";
--              Od;
--            Od;
            Пока Данные.Следующий Цикл
              if  Данные.Имя="" then
                Трассировка("Ошибка, нет данных для заполнения!");
                Трассировка(".........[ColumnsCount="+ Стр(Данные.ColumnsCount) + ", RowsCount=" + Стр(Данные.RowsCount) + ", Текущая=" + Стр(Данные.Текущая) + ", Имя=" + Стр(Данные.Имя) + ", Значение=" + Стр(Данные.Значение)+"]");
              Иначе
                ThisCell = Own.CurrentSection.КлеткаПоПолю[Данные.Имя];    --  Current
                if  ThisCell=Nil then
                  Трассировка("Поле '"+Данные.Имя+"' в Шаблоне - нет!");   --  Хозяин.2ШаблонТекущМакета0.Field = Данные.Имя;
                 -- Own.масПоИменованныхПолей[]                                Хозяин2.0CurrentSection2.CellByField["0Начисления2"]0 Данные.Имя  2"0Начисления2"
                    ТМП2 = Own.масПоИменованныхПолей;
                    I = SearchInArray (ТМП22[012]0, Данные.Имя);
                    if I=-1 then
                    --???
                    Иначе
                      ThisCell2 = 0ТМП22[02, I2]0;
                      Функции.ЗаписатьЗначениеВКлетку (ThisCell, Данные.Значение);
                    Илсе;
                Иначе
                   ThisCell2 = 0Функции.ЗаписатьЗначениеВКлетку (ThisCell, Данные.Значение);
--                   ThisCell.ReadOnly  = Ложь;
--                   ThisCell.FieldType = Kernel.Template.StaticText;
--                   ThisCell.CellType  = Kernel.Template.StaticCell;
--                   ThisCell.Contents  = Данные.Значение;        -- Смотрим Содержимое  ThisCell.Text;
                   Result = Истина;
                Илсе;
              Илсе;
            Лкиц;
          конец;
      Fi;

      if Own.ТаблицаПуста then
        Own.ТаблицаПуста = Ложь;
      Fi;

  end;
--  Проц ЗаполнитьПараметр            (2var0 ИмяПоля: Вариант;  ЗначениеПоля: Вариант ) ;
--    var i        : Целое;
--    var x        : Целое;
--      IF VarType(ИмяПоля) = varString then
--          ИмяПоля = Up(ИмяПоля);
----        Если ИмяПоля="" Тогда
----        Иначе
--          i = SearchInArray ( масСоответствие[1], ИмяПоля);
--          Если i=-1 Тогда                                         -- Нет поля в массиве
--              x = ДлинаМассива(масПоляСтруктур[1])+1 ;
--              ВставитьВМассив (масПоляСтруктур[1], x , ИмяПоля);  -- Добавили поле и
--              масПоляСтруктур[2,x] = ЗначениеПоля ;               -- Заполняем значение
--          Иначе
--              масПоляСтруктур[2,I] = ЗначениеПоля ;               -- Затираем значение в массиве
--          end;
----        end;
--      Иначе
--        IF VarType(ИмяПоля) = varInt  then
--          CurrentParameter = ИмяПоля ;
--          ВставитьВМассив (масПоляСтруктур[1], CurrentParameter ,  CurrentParameter );
--          ВставитьВМассив (масПоляСтруктур[2], CurrentParameter ,  Если(ЗначениеПоля=nil, "", ЗначениеПоля));
--        end;
--      end;
--  Цорп;

  Проц ЗаполнитьПараметры           ( Данные: Вариант;2 loc0Знач2 :0Вариант=Nil);
    var I,x        : Целое;
    var Структ     : Структура;
    var ТМП        : Вариант[1];
    var ТМП2       : Вариант[2];


Обновить ;

      IF Данные is Структура then      -- VarType(Данные)=6 (Объект)
        Структ = (Данные as Структура);
--        IF СтруктураПолейЗаполнена then   --Исключаю многократное заполнение массива однотипными данными!
--        Иначе
--          x     = Ядро.Структура.ClassInfo.MembersCount;
--          for I = x+1 .. Структ.ClassInfo.MembersCount do
--            Член = Структ.ClassInfo.Member[I];
--            IF Член is FieldInfo then      --Только имена полей!!
--              ВставитьВМассив (масПоляСтруктур[1], ДлинаМассива(масПоляСтруктур[1])+1, Up(Член.Name)); --ТипДвижения ДополнительныеПоля
--            Fi;
--          Od;
--        Fi;
--        Если масПоляСтруктур[1]=nil Тогда
--          СтруктураПолейЗаполнена = Ложь;
--        Иначе
--          СтруктураПолейЗаполнена = Истина;
--          for I = 1 .. ДлинаМассива(масПоляСтруктур[1]) do
--             масПоляСтруктур[2,I] = Данные.GetField(масПоляСтруктур[1,I]);
--          Od;
--          ДанныеПолейЗаполнены = Истина;
--        Илсе;
      ЕСЛИЖЕ VarType(Данные) = varString Тогда   --Имя поля
        if  CurrentSection.КлеткаПоПолю[Данные]=Nil then
          Трассировка("Поле '"+Данные+"' в Шаблоне - нет!");   --  Хозяин.2ШаблонТекущМакета0.Field = Данные.Имя;
        Иначе
         CurrentSection.КлеткаПоПолю[Данные].Value = 2loc0Знач;
        конец;
      ЕСЛИЖЕ VarType(Данные) = varArray Тогда   --8 = Массив
        --Массив может быть ДВУМЕРНЫЙ:  Массив[1]-"ИмяПоля"  Массив[2]-"ЗначениеПоля"
--        масПоляСтруктур = Nil;
           if Данные is Variant[2] then
             ТМП2 = Данные as Вариант[2];
--             масПоляСтруктур[1] = ТМП2[1];
--             масПоляСтруктур[2] = ТМП2[2];
           Иначе
             ТМП  = Данные as Вариант[1];
             for I = 1 .. ДлинаМассива(ТМП) do
--               ВставитьВМассив (масПоляСтруктур[1], I, I);
             Od;
--             масПоляСтруктур[2] = ТМП;
           конец;
      ЕСЛИЖЕ Данные.ClassType = СтруктурЫ Тогда
          Данные = (Данные как СтруктурЫ);
          if Данные.ColumnsCount > 0 and
              Данные.RowsCount   > 0 then
                                           -- Хозяин.2ШаблонТекущМакета0.ТекущаяСекция.КоличествоСтрок
            for I = 1 .. CurrentSection.КоличествоСтрок do
              for x = 1 .. CurrentSection.КоличествоСтолбцов  do
                CurrentSection.Клетка[x,I].Contents;   --или CurrentSection.Клетка[x,I].Text или CurrentSection.Клетка[x,I].Value   Хозяин.2ШаблонТекущМакета0.Field = "Контрагент";
              Od;
            Od;
            Пока Данные.Следующий Цикл
              if  CurrentSection.КлеткаПоПолю[Данные.Имя]=Nil then
                Трассировка("Поле '"+Данные.Имя+"' в Шаблоне - нет!");   --  Хозяин.2ШаблонТекущМакета0.Field = Данные.Имя;
              Иначе
                CurrentSection.КлеткаПоПолю[Данные.Имя].Contents = Данные.Значение; -- Хозяин.2ШаблонТекущМакета0.КлеткаПоПолю[Данные.Имя]
              Илсе;
            Лкиц;

          конец;

      Fi;
  Цорп;
-----------------------
end