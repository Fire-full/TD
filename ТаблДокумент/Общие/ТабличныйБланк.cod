Class inherited СИС2.БазовыйБланк "Табличный Документ" ;

Import   ТаблДокумент  Classes Функции;

InClass Public

--{ Обработчики событий Class-а бланка


--------------------------------------------------------------------------------
  func Новый  синоним On ( t: Вариант = Nil ) : ТаблДокумент.ТабличныйБланк;
    Result  = inherited Create;
--    ВставитьВМассив(МоиОбъекты, ДлинаМассива(МоиОбъекты)+1, Result);
    Result.Own = t;
    Result.Init(Result);

--    Если t.НомерОбъекта2=10 Тогда
--2       0Result.Visible = True;
--    Илсе;

  end;
--------------------------------------------------------------------------------
--} Обработчики событий Class-ов бланка

InObject Private

--{ Переменные Object-ов бланка

Current                        :2 0ТаблДокумент.ТабличныйБланк ;

ЗаголовокОкнаФормы : Строка;

CurrentFrame       : TemplateFrame;     -- Frame Заголовок
фрЗаголовок        : TemplateFrame;     -- Frame Заголовок
фрПриемник         : TemplateFrame;     -- Frame Приемник

секСлужебная       : TemplateSection;   -- Кнопочная секция("Печать","Настройка Печати","Предварительный Просмотр", ...)
секПриемник        : TemplateSection;   -- Секция Приемник

 SectionsCount     : Целое ;              --Перем
 КоличествоФреймов : Целое ;              --Перем
 КоличествоСтрок   : Целое ;              --Перем
 КоличествоКолонок : Целое ;              --Перем
 ВысотаШаблона     : Целое ;              --Перем
 ШиринаШаблона     : Целое ;              --Перем
                                          --
 НомерОбъекта      : Целое ;              --Перем
 Имя               : Строка;              --Перем
 Хозяин  Synonym  Own   : Вариант;        --Перем

--} inObject Перем

--------------------------------------------------------------------------------
--{ Обработчики событий Object-ов бланка
  proc Init 2(0CurAr2a : 0ТабличныйБланк2)0;

     ЗаголовокОкнаФормы     = "Табличный Документ";
     фрЗаголовок            = Nil;
     фрПриемник             = Nil;
     секСлужебная           = Nil;
     секПриемник            = Nil;

     SectionsCount          = 0 ;
     КоличествоФреймов      = 0 ;
     КоличествоСтрок        = 0 ;
     КоличествоКолонок      = 0 ;
     ВысотаШаблона          = 0 ;
     ШиринаШаблона          = 0 ;

     НомерОбъекта = CurAr2a0.ЧислоОбъектов;
     Имя = "Таб_Бланк" + Стр(НомерОбъекта);

     CurrentFrame = Self.Template.FrameByName['фрПриемник'];

     Если CurrentFrame.SectionsCount=0 Тогда
       секПриемник = CurrentFrame.InsertSection(1);   -- БланкМакета.Шаблон.ТекущийФрейм.Имя = "RootFrame"
     иначе
       SectionsCount = CurrentFrame.SectionsCount;
       Пока SectionsCount>0 ЦИКЛ
         CurrentFrame.DeleteSection(SectionsCount) ;
         SectionsCount = CurrentFrame.SectionsCount;
       Лкиц;
       секПриемник = CurrentFrame.InsertSection(1);   -- БланкМакета.Шаблон.ТекущийФрейм.Имя = "RootFrame"
       self.Template.CurrentSection = секПриемник;
     Илсе;
     Current = CurAr2a0;
     Обновить;

  end;
--------------------------------------------------------------------------------
  Проц Обновить;

       CurrentFrame = Self.Template.FrameByName['фрПриемник'];

       SectionsCount      = CurrentFrame.SectionsCount;
       КоличествоФреймов  = ВзятьВсеФреймы2Бланка0(Self.Template2.0RootFrame);
       Если секПриемник=nil Тогда
         секПриемник = CurrentFrame.InsertSection(1);
       Илсе;
       КоличествоСтрок    = секПриемник.КоличествоСтрок;
       КоличествоКолонок  = секПриемник.ColumnsCount;
       --ЗаголовокОкнаФормы = Own.ЗаголовокОкнаФормы;

  Цорп;
--------------------------------------------------------------------------------
  функ шаблон_ПриОтмене :Логическое;
    Result = Истина;
  конец;
--------------------------------------------------------------------------------
  proc шаблон_ПриОткрытии(Create :Logical);
    inherited шаблон_ПриОткрытии(Create);

    Create      = True;
    Обновить;     -- Приемник

  end;
--------------------------------------------------------------------------------
  проц шаблон_ПриЗакрытии(Уничтожается :Логическое);

    унаследованный шаблон_ПриЗакрытии(Уничтожается);
    -- Вызывается при закрытия окна формы
    --   Destroy: Истина - форма закрывается, Ложь - форма сохраняется при закрытии сессии

    Функции.Очистка;

    Уничтожается=Истина;
     
  конец;

--------------------------------------------------------------------------------
  func CellOnClick(Cell :TemplateCell; Action :Template.ClickTypes) :Logical;
    -- Обработка события нажатия в зависимости от типа
    -- Параметры:
    --   Cell: клетка шаблона
    --   Action: тип нажатия (SingleClick, DoubleClick, EnterPressed, ButtonPressed)
    Result = True; -- Разрешаем стандартную обработку
  end;
--------------------------------------------------------------------------------
  func ПолеЗаголовокОкнаФормы_ПриВыводе(Cell :TemplateCell; Value :Variant; Action :Template.OutputTypes; var Format :String) : Строка;
    Если Value="" Тогда
    Илсе;
    Result = inherited ПолеЗаголовокОкнаФормы_ПриВыводе(Cell,
                                                        Value,
                                                        Action,
                                                        Format);
    Если Value="" и ЗаголовокОкнаФормы<>"" Тогда
       Value = ЗаголовокОкнаФормы;
    Илсе;
    Result = Value; -- Что получили, то и выводим
  end;

--------------------------------------------------------------------------------
--  proc OnDestroy;
--
--    унаследованный OnDestroy ;
--
--    Current = nil;
--  end;
-----------------------

--} Обработчики событий Object-ов бланка

end